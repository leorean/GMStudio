<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>mskPlayer</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>xVel = 0;
yVel = 0;
dir = RIGHT;
state = IDLE;
jump = false;
canStomp = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>onGround = (yVel &gt;= 0 &amp;&amp; collision_line(bbox_left,bbox_bottom + max(yVel, 1), bbox_right, bbox_bottom + max(yVel, 1),
    objBlock, false, true));
    
if (onGround)
{
    jump = false;
    canStomp = false;
    if (state != IDLE)
        state = WALK;
}

if (state == IDLE)
{
    xVel = 0;
    yVel = 0;
}

yVel = min(yVel + .12, 4);

if (state == WALK)
{
    xVel = sign(dir) * 1.5;

    if (!jump)
    {
        if (mouse_check_button_pressed(mb_left))
        {
            yVel = -4;
            jump = true;
            state = JUMP;
        }
    }
}

if (state == JUMP)
{
    if (mouse_check_button_released(mb_left))
        canStomp = true;
        
    if (mouse_check_button(mb_left) &amp;&amp; canStomp)
    {
        state = STOMP;
    }
}

if (state == STOMP)
{
    xVel = 0;
    yVel = 8;
}



if (!in(bbox_left + xVel, 0, room_width) || !in(bbox_right + xVel, 0, room_width))
{
    xVel = -xVel;
    dir = -dir;
}

if (!place_meeting(x + xVel, y, objBlock))
{
    x += xVel;
}
else
{
    xVel = 0;
    if (onGround)
        dir = -dir;
}

if (!place_meeting(x, y + yVel, objBlock))
{
    y += yVel;
}
else
{    
    if (yVel &gt;= 0) move_contact_solid(270, 8);
    yVel = 0;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();
draw_text(x, y - TILE, state);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
