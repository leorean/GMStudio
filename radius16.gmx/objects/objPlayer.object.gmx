<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>mskPlayer</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>xVel = 0;
yVel = 0;
yGrav = .15;

fCur = 0;
frame = 0;
fSpeed = .1;

dir = RIGHT;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.state == PLAY)
{

    if (xVel &lt;= 0) dir = LEFT else dir = RIGHT;

    fCur = (fCur + fSpeed) % 4;
    frame = floor(fCur);

    if (mouse_check_button(mb_left))
    {
        angle = point_direction(x,y,mouse_x,mouse_y);        
        xVel += lengthdir_x(.3,angle);
        yVel += lengthdir_y(.3,angle);
        /*xVel += sign(mouse_x - x) * .2;
        if (y &gt; mouse_y)
            yVel += sign(mouse_y - y) * .3;
        */
    } else
        yVel += yGrav;
    

    if (y &gt; 16*TILE)
        yVel = max(yVel - .3, -2);
    else if (y &gt; 14*TILE)
        yVel -= .1;

    xVel = sign(xVel) * min(abs(xVel), 5);
    yVel = sign(yVel) * min(abs(yVel), 5);
    
    if (!in(x+xVel,0,room_width))
        xVel = - xVel * .3;
    if (!in(y+yVel,0,room_height))
        yVel = 0;
    
    if (!place_meeting(x+xVel,y,objSolid))
        x += xVel;
    else
        xVel = 0;
    if (!place_meeting(x,y+yVel,objSolid))
        y += yVel;
    else
    {
        xVel *= .9;
        yVel = 0;
    }
    
    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite_part_ext(sprPlayer,-1,3*frame*TILE,0,3*TILE,4*TILE,x-1.5*TILE*sign(dir),y-2.5*TILE,sign(dir),1,c_white,1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
