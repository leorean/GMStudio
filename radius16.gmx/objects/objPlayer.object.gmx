<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>mskPlayer</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>xVel = 0;
yVel = 0;
yGrav = .15;

fCur = 0;
frame = 0;
fSpeed = .1;

state = IDLE;
lastState = state;


delay = 0;
maxDelay = 40;
proj = noone;

dir = RIGHT;

// sprite width = strip width / sub images
sprPlayer = sprite_add("player.png",8,true,false,1.5*TILE,2.5*TILE);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.state == PLAY)
{

    if (mouse_x &lt;= x) dir = LEFT else dir = RIGHT;

    angle = point_direction(x,y,mouse_x,mouse_y);

    if (mouse_check_button_pressed(mb_left)
        &amp;&amp; instance_place(mouse_x,mouse_y,objEnemy) != noone)
    {
        state = ATTACK;
    }
    
    if (mouse_check_button(mb_left))
    {
        if (state != ATTACK)
        {
            state = WALK;
            xVel += lengthdir_x(.3,angle);
            yVel += lengthdir_y(.3,angle);
        }
    } else
    {
        xVel *= .9;
        yVel *= .9;
    }
        
    delay = max(delay-1,0);

    if (y &gt; 15*TILE)
        yVel = max(yVel - .2, -2);

    xVel = sign(xVel) * min(abs(xVel), 4);
    yVel = sign(yVel) * min(abs(yVel), 4);
    
    if (!in(x+xVel,0,room_width))
        xVel = - xVel * .3;
    if (!in(y+yVel,0,room_height))
        yVel = 0;
    
    if (!place_meeting(x+xVel,y,objSolid))
        x += xVel;
    else
        xVel = 0;
    if (!place_meeting(x,y+yVel,objSolid))
        y += yVel;
    else
    {
        xVel *= .9;
        yVel = 0;
    }

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var _s = 0
switch(state)
{
    case IDLE:
    case WALK:
        _s = 0;
        fSpeed = .1;
        break;
    case ATTACK:
        _s = 1;
        fSpeed = .2;
        break;
}

if (state != lastState) fCur = 4* _s;

fCur =  4 * _s + (fCur + fSpeed) % 4;
frame = floor(fCur);

if (state == ATTACK &amp;&amp; (frame % 4) == 3)
    state = IDLE;

lastState = state;

if (state == WALK)
    draw_angle = point_direction(x,y,x+xVel,y - 1*TILE +yVel) - 90
//else if (state == ATTACK)
//    draw_angle = point_direction(mouse_x, mouse_y, x, y) + 180 * (mouse_x &gt; x);
else
    draw_angle = 0;

draw_sprite_ext(sprPlayer,frame,x,y,sign(dir),1,draw_angle,c_white,1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
