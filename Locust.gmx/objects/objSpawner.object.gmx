<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprSpawner</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>objAny</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// SET IN EDITOR:

timer = 2*SEC;
object = objBall;
delay = 0*SEC;
pow = 250; // shooting power

//private:

s = 0;
frame = 0;
fMax = 9;
fCur = 0;
fSpeed = .3;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.state != G_PLAY)
    exit;

if (delay)
{
    delay = max(delay - 1, 0);
    exit;
}
    
s = max(s - 1, 0);

if (!s)
{
    angle = - phy_rotation + 90;
    var willShoot = true;
    
    instance_deactivate_object(objAny);
    instance_activate_region(x - 128, y - 128, 2*128, 2*128, true);
    for (var i = 0; i &lt; instance_number(objAny); i++)
    {
        var o = instance_find(objAny, i);
        if (instance_place(x + lengthdir_x(48, angle), y + lengthdir_y(48, angle), o)
            &amp;&amp; (o.phy_active))
        {
            if (o.object_index != objPlatform)
            {
                willShoot = false;
            }
        }
    }

    if(!willShoot)
        fCur = max(fCur - fSpeed, 0);
    else
        fCur = min(fCur + fSpeed, fMax);
    if (fCur == fMax)
    {
        fCur = 0;
        s = timer;
        var o = instance_create(x + lengthdir_x(64, angle),
            y + lengthdir_y(64, angle), object);
        o.phy_linear_velocity_x = lengthdir_x(pow, angle);
        o.phy_linear_velocity_y = lengthdir_y(pow, angle);        
    }
    instance_activate_object(objAny);
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var c = global.colors[global.colortheme];
draw_sprite_ext(sprSpawner, frame, x, y, image_xscale, image_yscale, -phy_rotation, c[3], 1);

frame = floor(fCur);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>-1</PhysicsObject>
  <PhysicsObjectSensor>-1</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>-1</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>64,64</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>
