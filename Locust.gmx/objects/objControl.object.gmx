<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>mskControl</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-99</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>randomize();

//room_goto_next();
device_mouse_dbclick_enable(true);

global.font1 = font_add_sprite(sprFont1, ord(' '), true, 0);
//!"#$%&amp;'()*+,-.(0123456789:;&lt;=&gt;?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`abcdefghijklmnopqrstuvwxyz{|}~

global.starlist = ds_list_create();

global.state = G_PLAY;
pauseScreen = noone;

global.mute = false; // &lt;- save/load

levelTextAlpha = 0;
global.levelText = "";
global.background = 0;

global.level = real(string_digits(room_get_name(room_last))) - 1; // &lt;- save/load (0, 1, 2, 3... = L1, L2, L3, L4...)

// color themes ($BGR):
//$89E1B5 .... schönes graugrün
//$10D6AD .... sattes grün
//                       bg1      bg2      main1    sub1     goal     obj1     obj2
global.colors[0] = array($FFFFFF, $FFFFFF, $BEC35A, $6486D4, $FEE2A4, $CA64F4, $FFFFA3); // (tutorial theme) pink/grayblue with yellow sky
global.colors[1] = array($FFFFFF, $FFFFFF, $7AD353, $6699BA, $C5F2FF, $DCF505, $73FFB2); // (forest theme ) green with blue sky
//global.colors[0] = array($CFE6FF, $D9F7FF, $6BC6F7, $F2E2C4, $FEE2A4, $CA64F4, $FFFFA3); // (bonbon theme) yellow/grayblue with yellow sky
//global.colors[0] = array($2081F1, $20A0F2, $FFD69C, $CCBFF3, $FEE2A4, $CA64F4, $FFFFA3); // blue/palepurple with yellow sky
//global.colors[1] = array($FFFFFF/*$E4F6C4*/, $FFFFFF, $F8C862, $7ADCA1, $FEE2A4, $DCF505, $73FFB2); // teal and green with blue sky
//global.colors[1] = array($E8E3C0, $FFFFFF, $A8FF2B, $7BA6DB, $FEE2A4, $F8C862, $CA64F4); // teal and light purple with blue sky
global.colortheme = 0;

// blue, red, yellow, orange, ...
global.switchcolors = array($F8C862, $FF9DE6, $6CC2F2, $5689EE );// $23C3FF);

global.levels = ds_list_create();
//                              room, name, description, stars, bg, colortheme
// potato world
ds_list_add(global.levels, array(L1, "01", "Tutorial", 0, 0, 0));
ds_list_add(global.levels, array(L2, "02", "Rollin' Around", 0, 0, 0));
ds_list_add(global.levels, array(L3, "03", "Against The Stream", 0, 0, 0));
ds_list_add(global.levels, array(L4, "04", "Building A Bridge", 0, 0, 0));
ds_list_add(global.levels, array(L5, "05", "Timing Is The Key", 0, 0, 0));
// forest
ds_list_add(global.levels, array(L6, "06", "Where The Forest Begins", 0, 1, 1));
ds_list_add(global.levels, array(L7, "07", "Leaky Lake", 0, 1, 1));
ds_list_add(global.levels, array(L1, "08", "???", 0, 1, 1));
ds_list_add(global.levels, array(L1, "09", "???", 0, 1, 1));
ds_list_add(global.levels, array(L1, "10", "???", 0, 1, 1));

ds_list_add(global.levels, array(L1, "XX", "---", 0, 0, 0));
ds_list_add(global.levels, array(L1, "XX", "---", 0, 0, 0));
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>display_set_gui_size(view_wview, view_hview);

if (keyboard_check_pressed(ord('Q')))
    game_restart();

if (keyboard_check(vk_space))
    room_speed = 5;
else
    room_speed = 60;
    
if (keyboard_check_pressed(ord('G')))
    with(objPlayer) state = WON;
if (keyboard_check_pressed(ord('K')))
    with(objPlayer) state = DEAD;
        
if (room == MENU)
{
    if (keyboard_check_pressed(ord('R')) || keyboard_check_pressed(vk_backspace))
        room_goto(room_last);
}
else
{
    if (keyboard_check_pressed(ord('R')))
        room_restart();
}

if (global.state == G_PLAY)
{
    physics_pause_enable(false);
}

if (global.state == G_OVER)
{
    deathTimer = max(deathTimer - 1, 0);

    // TODO: GAMEOVER MENU?
    if (!deathTimer &amp;&amp; mouse_check_button_released(mb_left))
        room_restart();
}

if (global.state == G_PAUSE)
{
    physics_pause_enable(true);
    instance_deactivate_all(true);
    instance_activate_object(objPauseMenu);
}

if (global.state == G_WON)
{
    // confetti stuff
    confettiTimer = max(confettiTimer - 1, 0);
    if (!confettiTimer)
    {
        var i = instance_create(view_xview + random(WIDTH) - 64, -64, objLevelMenuConfetti);
        i.depth = -101;
        confettiTimer = 20;
    }

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (os_type == os_windows)
{
    window_set_size(2*WIDTH, 2*HEIGHT);
}

// view stuff
view_visible[0] = true;
view_enabled[0] = true;
view_object[0] = objCamera;
view_wview[0] = WIDTH;
view_hview[0] = HEIGHT;
view_wport[0] = WIDTH;
view_hport[0] = HEIGHT;
view_vborder[0] = 999;
view_hborder[0] = 999;

// main menu
if(room == MENU)
{
    instance_create(0, 0, objLevelMenu);
    global.state = G_NOTHING;
    levelTextAlpha = 0;
    
    // reset taken stars
    ds_list_clear(global.starlist);
}

// normal playable levels
if(instance_exists(objPlayer))
{
    global.state = G_PLAY;
    
    instance_create(objPlayer.x, objPlayer.y, objCamera);
    global.left = instance_create(5*TILE, view_hview - 6*TILE, objButton);
    global.left.type = 0;
    
    global.right = instance_create(12*TILE, view_hview - 6*TILE, objButton);
    global.right.type = 1;
    
    global.jump = instance_create(view_wview - 5*TILE, view_hview - 6*TILE, objButton);
    global.jump.type = 2;
    
    levelTextAlpha = 4;
    confettiTimer = 0;
    global.stars = 0;
    deathTimer = 1.5*SEC;
    
    with(objStar)
    {
        if (ds_list_find_index(global.starlist, id) != -1)
        {
            global.stars++;
            instance_destroy();
        }
        visible = true;
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_font(global.font1);
draw_set_color(c_white);
draw_set_halign(fa_center);
draw_set_valign(fa_center);

if (global.state == G_PAUSE)
{
    if (pauseScreen != noone)
    draw_sprite(pauseScreen, -1, 0, 0);
}

if (global.state == G_PLAY)
{
    // level text
    if (levelTextAlpha &gt; 0)
    {
        draw_text_colour(WIDTH/2, 32, global.levelText, c_white, c_white, c_white, c_white, levelTextAlpha);
        levelTextAlpha = max(levelTextAlpha - .01, 0);
    }
    
    // # of stars
    for (var i = 0; i &lt; 3; i++)
    {
        draw_sprite_part_ext(sprUI, -1, 352, 480, 48, 48, WIDTH-144 + 48*i, 0, 1, 1, c_white, .5);
        if (global.stars &gt; i)
            draw_sprite_part(sprUI, -1, 352, 528, 48, 48, WIDTH-144 + 48*i, 0);
    }
}

if (global.state == G_PLAY || global.state == G_PAUSE)
    draw_sprite_part_ext(sprUI, -1, 64*(global.state == G_PAUSE), 528, 64, 64, 0, 0, 1, 1, c_white, .6);

//toggle pause menu
if (global.state == G_PLAY)
{
    if ((keyboard_check_pressed(ord('P')) || keyboard_check_pressed(vk_backspace)) || ((in(device_mouse_x_to_gui(0), 0, 64) &amp;&amp; in(device_mouse_y_to_gui(0), 0, 64)
        &amp;&amp; mouse_check_button_released(mb_left))))
    {
        global.state = G_PAUSE;
        
        var ax = application_get_position();        
        pauseScreen = sprite_create_from_surface(application_surface,0, 0,surface_get_width(application_surface),surface_get_height(application_surface),0,0,0,0);
        instance_create(0, 0, objPauseMenu);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//invisible</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_blend_mode(bm_normal);
draw_set_alpha(1);
draw_set_color(c_white);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
