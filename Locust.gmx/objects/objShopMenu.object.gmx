<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>t = 0;
z = 1;
maxIndex = ds_list_size(global.prices);

pencil = instance_create(WIDTH/2 - 48, HEIGHT/2 - 48, objPencil);

lockAngle = -15;
lockAngleVel = 0;
playerAlpha = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>x = objLevelMenu.x + WIDTH;
y = objLevelMenu.y;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_halign(fa_center);
draw_set_valign(fa_top);
draw_set_color(c_white);
draw_set_alpha(1);
draw_set_font(global.font1);
draw_sprite_part(sprUI, 0, 0, 0, 512, 423, x + 256, y + 96);
draw_text(x + WIDTH/2, y + HEIGHT/2 - 180, ds_list_find_value(global.priceNames, global.accessory));

draw_sprite_ext(sprSheet, 0, x + WIDTH/2 + 4, y + HEIGHT/2 + 4, 1, 1, 0, c_black, .3);
draw_sprite_ext(sprSheet, 0, x + WIDTH/2, y + HEIGHT/2, 1, 1, 0, c_white, 1);

//draw_sprite_part(sprUI, -1, 400, 512, 64, 64, x + WIDTH/2 - 32, y + HEIGHT/2 - 32);

var left = x + WIDTH/2 - 256 - 32;
var right = x + WIDTH/2 + 256 - 32;
var top = y + HEIGHT/2;
var inLeft = in(mouse_x, left, left + 64 + 144) &amp;&amp; in(mouse_y, top - 64, top + 128);
var inRight = in(mouse_x, right - 144, right + 64) &amp;&amp; in(mouse_y, top - 64, top + 128);

if (x != 0)
{
    with(objPencilOverlay) instance_destroy();
    pencil.visible = false;
}
else
    pencil.visible = true;

draw_set_font(global.font2);

// middle

if (!instance_exists(objPencilOverlay)) playerAlpha = min(playerAlpha + .05, 1);
else
    playerAlpha = 0;
draw_sprite_ext(sprPlayer, 0, x + WIDTH/2, y + HEIGHT/2, 1, 1, 0, c_white, playerAlpha);

draw_sprite(sprAccessoires, global.accessory, x + WIDTH/2, y + HEIGHT/2);
// middle star
draw_sprite(sprStar, 0, x + WIDTH/2, y + HEIGHT/2 + 96);
draw_text(x + WIDTH/2, y + HEIGHT/2 + 96 - 14, "x" + string(ds_list_find_value(global.prices, global.accessory)));

if (global.accessory &gt; 0)
{
    // left background
    draw_sprite_ext(sprSheet, 1, x + WIDTH/2 - 128, y + HEIGHT/2, 1, 1, 0, c_black, .3);
    // left accessory
    draw_sprite_ext(sprAccessoires, global.accessory-1, x + WIDTH/2 - 128, y + HEIGHT/2 + 0, 1, 1, 0, c_black, .3);

    // left star
    draw_sprite_part_ext(sprUI, -1, 352, 480 + 48*(ds_list_find_value(global.prices, global.accessory-1) &lt;= global.stars), 48, 48, 
        x + WIDTH/2 - 128 - 24, y + HEIGHT/2 + 96 - 24, 1, 1, c_black, .3);
    draw_text(x + WIDTH/2 - 128, y + HEIGHT/2 + 96 - 14, "x" + string(ds_list_find_value(global.prices, global.accessory-1)));

}
    
if (global.accessory &lt; maxIndex - 1)
{
    draw_set_alpha(1);
    // right background
    draw_sprite_ext(sprSheet, 1, x + WIDTH/2 + 128, y + HEIGHT/2, 1, 1, 0, c_black, .3);
    // right accessory
    draw_sprite_ext(sprAccessoires, global.accessory+1, x + WIDTH/2 + 128, y + HEIGHT/2 + 0, 1, 1, 0, c_black, .3);
    
    //right star
    draw_sprite_part_ext(sprUI, -1, 352, 480 + 48*(ds_list_find_value(global.prices, global.accessory+1) &lt;= global.stars), 48, 48, 
        x + WIDTH/2 + 128 - 24, y + HEIGHT/2 + 96 - 24, 1, 1, c_black, .3);
    draw_set_alpha(1);
    draw_text(x + WIDTH/2 + 128, y + HEIGHT/2 + 96 - 14, "x" + string(ds_list_find_value(global.prices, global.accessory+1)));
    
    // locked
    if (global.stars &lt; ds_list_find_value(global.prices, global.accessory+1))
    {
        draw_sprite_ext(sprLockedAccessory, -1, x + WIDTH/2 + 128 + 3, y + HEIGHT/2 - 56 + 3, 1, 1, lockAngle, c_black, .3);
        draw_sprite_ext(sprLockedAccessory, -1, x + WIDTH/2 + 128, y + HEIGHT/2 - 56, 1, 1, lockAngle, c_white, 1);
        var c = $353EED;
        draw_text_color(x + WIDTH/2 + 128, y + HEIGHT/2 + 96 - 14, "x" + string(ds_list_find_value(global.prices, global.accessory+1)),
            c, c, c, c, 1);    
    }
    
    if (lockAngle &lt; 0) lockAngleVel += .1;
    if (lockAngle &gt; 0) lockAngleVel -= .1;
    
    lockAngle += lockAngleVel;
}

// left button
if (global.accessory &gt; 0)
{
    draw_set_alpha(1);
    draw_sprite_part(sprUI, -1, 128, 432 + 80*inLeft*mouse_check_button(mb_left), 64, 80, left, top);
    
    if (inLeft &amp;&amp; mouse_check_button_released(mb_left))
    {
        createPencilOverlay();
        pencil.start = true;
        global.accessory--;
    }
}

// right button
if (global.accessory &lt; maxIndex - 1 &amp;&amp; global.stars &gt;= ds_list_find_value(global.prices, global.accessory + 1))
{
    draw_set_alpha(1);
    draw_sprite_part(sprUI, -1, 128+64, 432 + 80*inRight*mouse_check_button(mb_left), 64, 80, right, top);

    if (inRight &amp;&amp; mouse_check_button_released(mb_left))
    {
        createPencilOverlay();    
        pencil.start = true;
        global.accessory++;
        lockAngle = -15;
    }
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
