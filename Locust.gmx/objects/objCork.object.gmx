<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprCork</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-5</depth>
  <persistent>0</persistent>
  <parentName>objSolid</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>activated = false;
yt = 0;
a = 0;
n = false;

fCur = 0;
frame = 0;

xo = phy_position_x;
yo = phy_position_y;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!instance_exists(objWater))
    exit;

if (activated)
{

    if (!physics_test_overlap(phy_position_x, phy_position_y, phy_rotation, objWater))
        phy_linear_velocity_y = max(phy_linear_velocity_y, 0);
        
    // water    
    if (phy_linear_velocity_y &gt; -40 &amp;&amp; physics_test_overlap(phy_position_x, phy_position_y - 16, phy_rotation, objWater))
        physics_apply_force(phy_position_x, phy_position_y, 0, -800);

    for(i = 0; i &lt; room_width; i+= 32)
    {
        var w = instance_place(i, yt, objWater);
        
        if (instance_exists(w))
        {
            with(w) instance_destroy();
            with(objWater) init = false;
        }        
    }

    yt += .4;
    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objPlayer">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!activated)
{
    activated = true;
    
    var o = noone;
    for(var i = 0; i &lt; instance_number(objWater); i++)
    {
        var w = instance_find(objWater, i);
        if (o == noone || w.phy_position_y &lt; o.phy_position_y)
            o = w;
    }
    
    if(instance_exists(o))
        yt = o.phy_position_y - 64;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite_ext(sprCork, -1, phy_position_x, phy_position_y, image_xscale, image_yscale, -phy_rotation, c_white, 1);

if (activated &amp;&amp; instance_exists(objWater))
{
    if (!n)
    {
        a = min(a + .01, 1);
        if (a == 1)
            n = true;
    }
    else    
        a = max(a - .001, 0);

    fCur = ((fCur + .15) % 4);
    frame = floor(fCur);
    draw_sprite_part_ext(sprSwirl, -1, ((frame + 2)%4)*64, 0, 64, 64, xo - 32*.5*image_xscale, yo - 32*.5*image_yscale, .5*image_xscale, .5*image_yscale, c_white, .3*a);
    draw_sprite_part_ext(sprSwirl, -1, frame*64, 0, 64, 64, xo - 32*image_xscale, yo - 32*image_yscale, image_xscale, image_yscale, c_white, .25*a);
    draw_sprite_part_ext(sprSwirl, -1, ((frame + 3)%4)*64, 0, 64, 64, xo - 32*.75*image_xscale, yo - 32*.75*image_yscale, .75*image_xscale, .75*image_yscale, c_white, .15*a);
    
    if (irandom(3) == 1)
        instance_create(xo, yo + 28, objBubble);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>-1</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>2</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>1</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.5</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>10</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>3</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>12,12</point>
    <point>32,8</point>
    <point>52,12</point>
    <point>44,52</point>
    <point>20,52</point>
  </PhysicsShapePoints>
</object>
