<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprEnemyMummy</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>objEnemyVulnerable</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>state = WALK;
dir = RIGHT;
frame = 0;
spd = 0.75;
shouldTurnAround = false;
frame = 0;
fCur = 0;

dirTimer = 0;
deathTimer = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>phy_rotation = (phy_rotation % 360) + 360;
if (state == WALK)
{
    phy_rotation = 0;
    fCur = (fCur + .15)  % 4;
    phy_speed_x = sign(dir) * spd;
}
if (state == DEAD &amp;&amp; deathTimer &gt;= 1*SEC)
{
    createEffect(0, phy_position_x, phy_position_y);
    instance_destroy();
}


if (!dirTimer)
{
    if (physics_test_overlap(phy_position_x + sign(dir) * 6, phy_position_y - 6, phy_rotation, objSolid)
    || !physics_test_overlap(phy_position_x, phy_position_y + 6, phy_rotation, objSolid))
    {
        dir = -dir;
        dirTimer = .5*SEC;
    }
}

/*if (collision_line(bbox_left - 6, phy_position_y, bbox_right + 6, phy_position_y, objSolid, true, true))
    || (!collision_point(bbox_left - 6, bbox_bottom + 4, objSolid, true, true)
        &amp;&amp; !collision_point(bbox_right + 6, bbox_bottom + 4, objSolid, true, true))
        shouldTurnAround = true;
*/

dirTimer = max(dirTimer - 1, 0);
if (state == DEAD)
{
    deathTimer++;
    if (frame != 4) phy_speed_y = -4;
    phy_speed_x = 0;
    phy_rotation = -180;
    fCur = 4;
}
frame = floor(fCur);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objTurnAround">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>shouldTurnAround = (dir == LEFT &amp;&amp; phy_position_x &gt; other.phy_position_x)
    || (dir == RIGHT &amp;&amp; phy_position_x &lt; other.phy_position_x);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objMovable">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (abs(other.phy_speed) &gt; 0.5 &amp;&amp; other.phy_position_y &lt; phy_position_y)
    state = DEAD;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objSolid">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var angle = -phy_rotation + 180*(dir == LEFT);
draw_sprite_ext(sprite_index, frame, x, y, image_xscale, image_yscale * dir, angle, c_white, 1);


draw_rectangle(bbox_left, bbox_top, bbox_right, bbox_bottom, 1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>-1</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>1</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>1</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>16,10</point>
    <point>48,10</point>
    <point>48,64</point>
    <point>16,64</point>
  </PhysicsShapePoints>
</object>
