<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>enum S //states
{
    WAIT = 0,
    WALK = 1,
    PANIC = 2,
    DIE = 3
}
enum D //depth
{
    HUD = -100,
    TILES = 1000000,
    LIVING = -1
}

instance_create(room_width/2,room_height/2,objCamera);
device_mouse_dbclick_enable(true);

mask_index = sprHuman; //should be a mask larger than the humans
randomize();

depth = D.HUD;

global.paused = false;
global.timer = 0;
global.inGame = true; //if true, ingame actions enabled, else: HUD/camera actions enabled.
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.timer = (global.timer + 1) mod INFINITE;

if (global.inGame)
{
    if (mouse_check_button_pressed(mb_right) &amp;&amp; !place_meeting(mouse_x,mouse_y,objSolid)
        &amp;&amp; in(mouse_x,0,room_width) &amp;&amp; in(mouse_y,0,room_height))
        instance_create(mouse_x,mouse_y,objChicken);
}

if (keyboard_check_pressed(vk_escape) || keyboard_check_pressed(vk_backspace))
    game_end();

//++++DEBUG KEYS+++++++++++++++++++++++++++

if (keyboard_check_pressed(ord('P')))
    with(objChicken)
        state = S.PANIC;

if (keyboard_check_pressed(ord('Q')))
    room_restart();
    

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//spawn humans:
/*
repeat(10)
{
    var i;
    i = 0;
    while (i = 0)
    {
        rx = TILE + TILE*random(room_width/TILE - 2) + TILE/2;
        ry = TILE + TILE*random(room_height/TILE - 2) + TILE/2;
        if (place_free(rx,ry))
        {
            instance_create(rx,ry,objHuman);
             i++;
        }
    }
}*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>8,8</point>
    <point>8,8</point>
  </PhysicsShapePoints>
</object>
