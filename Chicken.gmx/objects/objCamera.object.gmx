<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
window_set_size(3*WIDTH,3*HEIGHT);
window_center();

wheelTimer = 0;
zoom = 1;
xP = x;
yP = y;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>view_wview[0] = WIDTH*zoom;
view_hview[0] = HEIGHT*zoom;

if (mouse_check_button(mb_left))
{
    x = mouse_x;
    y = mouse_y;
    view_hspeed[0] = (abs(x - (view_xview[0] + view_wview[0]/2)) / (view_xview[0] + view_wview[0]/2)) * 8;
    view_vspeed[0] = (abs(y - (view_yview[0] + view_hview[0]/2)) / (view_yview[0] + view_hview[0]/2)) * 8;
} else
{
    view_hspeed[0] = 4;
    view_vspeed[0] = 4;
}

if (mouse_wheel_up())
{
    zoom = max(zoom - .02, .5);
    wheelTimer = 60;
}
else if (mouse_wheel_down())
{
    zoom = min(zoom + .02, min(room_height/HEIGHT, room_width/WIDTH));
    wheelTimer = 60;
}
else
{
    wheelTimer = max(wheelTimer - 1, 0);
    
    var xMin,yMin,xMax,yMax;
    xMin = 0; yMin = 0; xMax = 0; yMax = 0;
    for(i = 0; i &lt;= instance_number(objLiving); i++)
    {
        var l;
        l = instance_find(objLiving,i);
        xMin = min(xMin, l.x);
        yMin = min(yMin, l.y);
        xMax = max(xMax, l.x);
        yMax = max(yMax, l.y);
    }
    
    var w,h;
    w = abs(xMin - xMax)/room_width;
    h = abs(yMin - yMax)/room_height;
    
    if (wheelTimer == 0)
        //zoom = max(w,h);//sqrt(power(w,2) + power(h,2));
        /*
         zoom = max(min(
                sqrt(power(w,2) + power(h,2)),//min(abs(xMin - xMax)/room_width, abs(yMin - yMax)/room_height),
                min(room_height/window_get_height(), room_width/window_get_width())),
                .5);
                */
         zoom = sqrt(power(w,2) + power(h,2));
    if (!mouse_check_button(mb_left))
    {
        x = (xMin + xMax)/2;
        y = (yMin + yMax)/2;
    }
        
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
