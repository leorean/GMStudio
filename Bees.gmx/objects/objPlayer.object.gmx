<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>mskPlayer</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>angle = 0;

xVel = 0;
yVel = 0;
velMax = 2;

cx = (bbox_right+bbox_left)/2;
cy = (bbox_top+bbox_bottom)/2;

tx = cx;
ty = cy;

state = IDLE;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!global.paused)
{
    cx = (bbox_right+bbox_left)/2;
    cy = (bbox_top+bbox_bottom)/2;
    
    if (mouse_check_button(mb_left))
    {
        tx = mouse_x;
        ty = mouse_y;
        angle = point_direction(cx,cy,tx,ty);
        state = FLY;
    }
    if (state == FLY)
    {
        if (abs(tx-cx)&gt;TILE || abs(ty-cy)&gt;TILE)
        {
            xVel += sign(tx-cx)*.1;
            yVel += sign(ty-cy)*.1;
            //xVel += (tx - cx) / 600;
            //yVel += (ty - cy) / 600;
                
        } else
        {
            state = IDLE;
            //xVel = sign(floor(xVel))*(tx - cx) / 12;
            //yVel = sign(floor(yVel))*(ty - cy) / 12;
        }
    }
    
    if (state == IDLE)
    {
        tx = cx;
        ty = cy;
        
        xVel *= .9;
        if (abs(yVel)&gt;.5) yVel *= .9;
            else
        yVel = .1*sin(global.timer*.05);
    }
    xVel = sign(xVel)*min(abs(xVel),velMax);
    yVel = sign(yVel)*min(abs(yVel),velMax);
    
    if (!place_meeting(x+xVel,y,objBlock))
        x += xVel;
    else
        xVel = -xVel;
    if (!place_meeting(x,y+yVel,objBlock))
        y += yVel;
    else
        yVel = -yVel;
        
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();
draw_line(cx,cy,tx,ty);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
