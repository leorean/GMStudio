<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>mskCursor</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-55</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>xo = x;
yo = y;

foodType = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (type != C_FEED)
    draw_sprite_part(sprGfx,-1,2*type*TILE,432,2*TILE,2*TILE,x,y);
else
    draw_sprite_part(sprGfx,-1,2*type*TILE,432,2*TILE,2*TILE,xo,yo);

if (global.cursor != type)
{
    x = xo;
    y = yo;
    
    if (collision_point(mouse_x,mouse_y,id,false,false)
    &amp;&amp; mouse_check_button_pressed(mb_left))
        global.cursor = type;
            foodType = irandom(3);

} else
{
    if (!mouse_check_button(mb_left) || mouse_y &gt; 256)
        global.cursor = C_GRAB;
    
    x = mouse_x-TILE;
    y = min(mouse_y-TILE,yo);
    
    if (true)//place_meeting(x,y,objPlayer))
    {
        if (type == C_PLAY)
        {
            if (objPlayer.happiness &lt; 99)
            {
                objPlayer.state = PLAY;
                objPlayer.stateTimer = 10;
                
                draw_set_color(make_color_rgb(194,0,0));
                
                draw_line_width(mouse_x,mouse_y,objPlayer.x+objPlayer.dir*4,objPlayer.y+3,1);
                
                objPlayer.happiness = min(objPlayer.happiness+.1,100);
                
                var xp = 0.01*(global.level+1);
                global.xp += xp;
                
                if (global.timer % 15 == 0)
                {
                    var eff = instance_create(objPlayer.x-TILE+random(2*TILE),objPlayer.y,objSymbol);
                    eff.type = 1;
                }
            }
            
        }
        if (type == C_SLEEP)
        {
            if (objPlayer.sleepiness &lt; 99)
            {
                var xp = 0.01*(global.level+1);
                global.xp += xp;
                
                objPlayer.sleepiness = min(objPlayer.sleepiness+.1,100);
                
                if (global.timer % 30 == 0)
                {
                    var eff = instance_create(objPlayer.x-TILE+random(2*TILE),objPlayer.y,objSymbol);
                    eff.type = 0;
                }
                /*
                var txt = instance_create(mouse_x,mouse_y-TILE,objText);
                txt.fnt = global.fntSmall;
                txt.text = "+"+string(bigNumber(xp))+" EXP";
                txt.yVel = -.0;
                */
                
                objPlayer.state = SLEEP;
                objPlayer.stateTimer = 3*SEC;
            }
        }        
    }
    if (type == C_FEED)
    {
        draw_sprite_part(sprGfx,-1,448+foodType*TILE,192,TILE,TILE,x+.5*TILE,y+.5*TILE);
        if (mouse_check_button_released(mb_left) &amp;&amp; in(mouse_y,6.5*TILE,16*TILE))
        {
            var food = instance_create(objPlayer.x-TILE+random(2*TILE),6.5*TILE,objFood);
            food.type = foodType;
            //draw_sprite_part(sprGfx,-1,2*type*TILE,432,2*TILE,2*TILE,x,y);
        }
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
