<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>mskPlayer</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>-25</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>xVel = 0;
yVel = 0;
yGrav = .07;

dir = RIGHT;

state = IDLE;
stateTimer = 3*SEC;
statePrev = state;

w = abs(bbox_left-bbox_right);
h = abs(bbox_top-bbox_bottom);

fCur = 0;
fMax = 2;
frame = 0;

stateTimer = 0;

onGround = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//


//++++state stuff++++

if (state != HAPPY)
    global.combo = 0;
    
stateTimer = max(stateTimer - 1, 0);

if (!stateTimer)
{
    switch(state)
    {
        case HAPPY:
            immersion_play_effect(2);
            state = IDLE;
        break;
        case IDLE:
            state = choose(WALK,IDLE,SLEEP);
            dir = choose(LEFT,RIGHT);
        break;
        case WALK:
            state = choose(WALK,IDLE);
        break;
        case SLEEP:
            //state = choose(SLEEP,SLEEP,SLEEP,IDLE);
        break;
    }
    stateTimer = choose(1,2,3)*SEC;
}

if (state == WALK)
{
    xVel = sign(dir)*.5;
    if (bbox_left + xVel &lt;= 0 || bbox_right + xVel &gt;= WIDTH)
    {
        xVel = 0;
        dir = -dir;
    }
}

if (state == SLEEP)
{
    //purrr
    if (global.timer % (1.5*SEC) == 0)
        immersion_play_effect(41);
}

//++++physics+++++

onGround = place_meeting(x,y+1,objGround)&amp;&amp;yVel&gt;=0;

yVel += yGrav;

if (y +yVel &lt; 8.5*TILE)
    yVel = -yVel/4;

if (!place_meeting(x,y+yVel,objGround))
    y += yVel;
else
{
    yVel = 0;
    
    if(state == IDLE || state == HAPPY)
        xVel *= .9;
   
}

if (bbox_left + xVel &gt; 0 &amp;&amp; bbox_right + xVel &lt; WIDTH)
    x += xVel;
else
    xVel = -xVel;
    
//++++end variables++++
statePrev = state;


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//var row = 0;
switch(state)
{
    case IDLE:
        row = 1;
        fSpeed = .05;
        fMax = 2;        
    break;
    case HAPPY:
        row = 0;
        fSpeed = .1;
        fMax = 2;
    break;
    case WALK:
        row = 2;
        fSpeed = .15;
        fMax = 4;
    break;    
    case SLEEP:
        row = 3;
        fSpeed = .05;
        fMax = 4;
    break;
}
if (!onGround &amp;&amp; (state == HAPPY || state == IDLE)) col = 2;
else col = 0;

fCur = (fCur + fSpeed) % fMax;
frame = floor(fCur);

draw_sprite_part_ext(sprPlayer,-1,frame*3*TILE+col*3*TILE,row*3*TILE,3*TILE,3*TILE,floor(x)+1.5*TILE-3*TILE*(dir==RIGHT),floor(y)-1.5*TILE,sign(dir),1,c_white,1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
