<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>mskInitiator</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>xVel = 0;
yVel = 0;

spawnx = x;
spawny = y;

z = 0;

dragged = false;
thrown = false;

maxTimer = 2*SEC;
timer = maxTimer;

xprev = x;
yprev = y;
mx = x;
my = y;

force = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*if (!device_mouse_check_button_released(0, mb_left))
{
    xprev = mx;
    yprev = my;
}*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>mx = device_mouse_x(0);
my = device_mouse_y(0);

if (!dragged)
{
    
    if (device_mouse_check_button_pressed(0, mb_left) &amp;&amp; in(mx,x-40,x+40) &amp;&amp; in(my,y-40,y+40))
    {
        dragged = true;
        xoff = x - mx;
        yoff = y - my;
    }
}

if (dragged &amp;&amp; !thrown)
{

    xVel = (mx - (x - xoff)) / 6;
    yVel = (my - (y - yoff)) / 6;
    
    if (!device_mouse_check_button(0, mb_left) &amp;&amp; max(abs(xVel),abs(yVel)&gt;1))
        thrown = true;
}

if (thrown)
{
    timer = max(timer - 1, 0);
    
    if (!timer)
    {
        xVel = 0;
        yVel = 0;
        var count = 0;
        for (i = 0; i &lt; instance_number(objNpc); i++)
        {
            var t = instance_find(objNpc, i);
            if (place_meeting(x,y,t))
            {
                t.state = INFECTED;
                t.hp = global.infectedHp;
                global.peopleLeft--;
                count++;
            }
        }
        
        var t = instance_create(x, y, objText);
        if (count == 0)
            t.text = "Miss";
        if (count == 1)
            t.text = "1 Hit!";
        if (count &gt; 1)
            t.text = string(count) + " Hits!";
        
        global.state = G_PLAY;
        
        instance_destroy();
    }
} else
{
    /*xVel = 0;
    yVel = 0;*/
}

xVel = sign(xVel) * min(abs(xVel), 16);
yVel = sign(yVel) * min(abs(yVel), 16);

if (in(x + xVel, 40, room_width-40))
    x += xVel * (timer / maxTimer);
else
    xVel = -xVel * .9;

if (in(y + yVel, 40, room_height-40))
    y += yVel * (timer / maxTimer);
else
    yVel = -yVel * .9;


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();

//draw_text(64,64, force);


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
