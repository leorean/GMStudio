<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>mskControl</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>randomize();

surf = -1; //drawing surface

global.fnt = font_add_sprite(sprFnt, ord(' '), true, 1);

// ++++ level data ++++

levelData[0] = importLevel("LEVEL0.tmx");
levelParameters[0] = createArray(30, 30, 0); //population, density, security
//levelData[1] = importLevel("L1.tmx");
//levelData[2] = importLevel("L2.tmx");

// ++++ define upgrades &amp; prices! ++++

//global price list for all upgrades
prices = createArray(0, 500, 2000, 7000, 11500, 19200, 34000, 51000, 172000, 390000, 1250000);

u_dmg = createArray(10, 15, 25, 35, 50, 70, 85, 100, 120, 150, 175);
u_delay = createArray(32, 30, 28, 25, 22, 18, 16, 14, 11, 10, 8);
u_infectedHp = createArray(135, 150, 175, 200, 225, 250, 300, 350, 450, 550, 650);
u_huntSpeed = createArray(1.1, 1.15, 1.20, 1.25, 1.3, 1.35, 1.40, 1.45, 1.50, 1.55, 1.6);
u_infectChance = createArray(0.27, 0.31, 0.34, 0.38, 0.42, 0.5, 0.6, 0.7, 0.8, 0.9, 0.95);
u_value = createArray(3, 15, 27, 80, 155, 285, 423, 681, 1208, 1654, 2358);

u_coinRadius = createArray(32, 36, 42, 48, 52, 64, 80, 96, 128, 144, 160);

//further upgrades:
//ball upgrades, tries, money multiplier?

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (keyboard_check_pressed(ord('R')) || keyboard_check_pressed(vk_backspace))
    room_restart();
    
if (keyboard_check(vk_space))
    room_speed = 5;
else
    room_speed = 60;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>zombiesLeft = 0;
peopleLeft = 0;
for (i = 0; i &lt; instance_number(objNpc); i++)
{
    var _t = instance_find(objNpc, i);
    if (_t.state == INFECTED)
        zombiesLeft++;
}

if (global.state == G_PLAY &amp;&amp; (zombiesLeft == 0 || global.peopleLeft == 0))
    gameOverTimer = max(gameOverTimer - 1 , 0);

if (!gameOverTimer)
    global.state = G_OVER;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Free Surface
if (surface_exists(surf))
    surface_free(surf);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.state = G_START;
gameOverTimer = 1.5*SEC;
global.timer = 0;
global.coins = 0;

createRoom(levelData[0]);

//todo: load these parameters!
levelDensity = 30;
levelPopulation = 50;

global.peopleLeft = levelPopulation;

// upgradeable variables:

global.coinRadius = 32;
global.dmg = 25;
global.delay = 10;
global.infectedHp = 450;
global.huntSpeed = 2;
global.infectChance = .5;

global.value = 3;

repeat(levelDensity)
{
    var rndx = -1;
    var rndy = -1;
    while(!place_free(rndx,rndy) || min(rndx,rndy) &lt; 0)
    {
        rndx = irandom(room_width div TILE - 1) * TILE;
        rndy = irandom(room_height div TILE - 1) * TILE;    
    }
    instance_create(rndx,rndy,objNpc);
}

instance_create(room_width/2, room_height - 40, objInitiator);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//++++SHADER++++
shader_set(shader0);
draw_clear(c_black);

//--------------------------------------------------

//++++SURFACE++++
if (!surface_exists(surf))
{
    //Create (or recreate) the surface when needed
    //QUALITY:
    
    view_wview = room_width;
    view_hview = room_height;
    
    var _w = view_wport[0];
    var _h = view_hport[0];

    surf = surface_create(_w, _h);
    surface_set_target(surf);
    
    draw_clear(c_black);
    surface_reset_target();
    
    //Set the view that you want to draw to the surface
    view_surface_id[0] = surf;
        
}
else
{

    //Disable alpha blending (not needed since we are drawing the whole view)
    draw_enable_alphablend(false);
    //Draw the surface stretched to the GUI layer
    
    var aspect_x = display_get_gui_width() / surface_get_width(surf);
    var aspect_y = display_get_gui_height() / surface_get_height(surf);
    
    display_set_gui_size(surface_get_width(surf) / 2, surface_get_height(surf) / 2);
    
    var xoffset = (surface_get_width(surf)*aspect_x) / 2;
    var yoffset = (surface_get_height(surf)*aspect_y) / 2;
    draw_surface_ext(surf,
        display_get_gui_width() / 2 - xoffset,
        display_get_gui_height() / 2 - yoffset, aspect_x, aspect_y, 0, c_white, 1);
    
    //Switch on alpha blending again for the next normal draw pass
    draw_enable_alphablend(true);
    
}

// ++++ DRAW GUI HERE ++++

var w = display_get_gui_width();
var h = display_get_gui_height();

draw_set_alpha(1);
draw_set_color(c_white);
draw_set_font(global.fnt);

draw_set_halign(fa_right);
draw_set_valign(fa_top);

// coins
draw_text(w - 0, 0, "$" + string(global.coins));

// game over text
draw_set_halign(fa_center);
draw_set_valign(fa_center);

if (global.state == G_OVER)
    draw_text(w/2, h/2, "The day ends..");
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
