<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>mskPlayer</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>phy_rotation = 0;
phy_fixed_rotation = true;

global.player = id;

isJumped = false;

rope = noone;
ropeEnd = noone;
ropeNew = noone;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//++++input
keyL = keyboard_check(vk_left);
keyR = keyboard_check(vk_right);
keyU = keyboard_check(vk_up);
keyD = keyboard_check(vk_down);
keyActionPressed = keyboard_check_pressed(vk_space);
keyActionReleased = keyboard_check_released(vk_space);

//++++flag control
onGround = (phy_speed_y &gt;= 0 &amp;&amp; collision_line(x-TILE/2+2,y+TILE/2,x+TILE/2-2,y+TILE/2,objCollider,true,true))

if (onGround)
    isJumped = false;

//if (!physics_test_overlap(x,y+1,0,objCollider))
//    isJumped = true;

//++++movement
if (keyL &amp;&amp; !keyR  &amp;&amp; phy_speed_x &gt; -2)
    physics_apply_force(x,y,-300,0);

if (keyR &amp;&amp; !keyL &amp;&amp; phy_speed_x &lt; 2)
    physics_apply_force(x,y,300,0);

if (!keyL &amp;&amp; phy_speed_x &lt; 0)
    phy_speed_x = min(phy_speed_x + .1, 0);
if (!keyR &amp;&amp; phy_speed_x &gt; 0)
    phy_speed_x = max(phy_speed_x - .1, 0);

//if (!keyL &amp;&amp; !keyR &amp;&amp; onGround)
//    phy_speed_x *= .85;

//++++jumping
if (keyU)
{
    if (!isJumped)
    {
        physics_apply_impulse(x,y,0,-220);
        isJumped = true;
    }
}

//++++rope action
if (keyActionPressed)
{
    if (rope == noone)
    {
        rope = instance_create(x,y,objRope);
        with (rope)
        {
          //  physics_
        }
    }
    /*
    if (rope == noone)
    {
        rope = instance_create(x,y,objRope);
        //rope.isSticky = true;
        //with(rope) phy_bullet = true;
        //with (rope) physics_apply_impulse(x-1,y+1,5000,-5000);
        ropeEnd = rope;
    
        repeat(15)
        {
            ropeNew = instance_create(x,y,objRope);
            
            with(ropeEnd) ds_list_add(children,global.player.ropeNew);
            //with (ropeNew) phy_speed_x = 30;//physics_apply_impulse(x-1,y+1,30,-30);

            ropeNew.parent = rope;
            with (ropeNew)
                joint = physics_joint_rope_create(self,parent,x,y,parent.x,parent.y,4,false);
            rope = ropeNew;
        }
        //final joint
        joint = physics_joint_revolute_create(self,rope,x,y,0,360,false,0,0,false,true);
        //joint = physics_joint_rope_create(self,rope,x,y,rope.x,rope.y,1,true);
        
        
        with(ropeEnd)
        {
            physics_apply_impulse(x-1,y+1,500,-500);
            isSticky = true;
        }
    } else
    {
        //with (ropeEnd) instance_destroy();
        rope = noone;
    }
    */
}

if (keyActionReleased)
{
   
    rope = noone;
    if (joint != noone)
        physics_joint_delete(joint);
    joint = noone;
    with(objRope) instance_destroy();
    
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();
//draw_sprite_ext(mskPlayer,-1,x,y,1,1,0,c_white,1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>-1</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>1</PhysicsObjectShape>
  <PhysicsObjectDensity>10</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0</PhysicsObjectRestitution>
  <PhysicsObjectGroup>1</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>2,2</point>
    <point>14,2</point>
    <point>14,14</point>
    <point>2,14</point>
  </PhysicsShapePoints>
</object>
