<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>mskThing</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>dragged = false;

global.player = id;


dir = RIGHT;

kLeft = false;
kRight = false;

xVel = 0;
yVel = 0;
xAcc = .1;
xVelMax = 3;

spd = 40;
spdMax = 4;
jmp = 700;
jumpedEh = false;

rope = noone;
ropeOrig = noone;
joint = -1;
ropeCount = 0;
maxRopeCount = 15;
produceRope = false;
canShootRope = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (mouse_x &gt; bbox_left &amp;&amp; mouse_x &lt; bbox_right
&amp;&amp; mouse_y &gt; bbox_top &amp;&amp; mouse_y &lt; bbox_bottom
&amp;&amp; mouse_check_button(mb_left))
{
    dragged = true;
}

if (mouse_check_button_released(mb_left))
    dragged = false;

if (dragged)
{
    phy_position_x = mouse_x;
    phy_position_y = mouse_y;
}

//++++++++++++++++++++++++++++++++++++++++
kLeft = keyboard_check(vk_left);
kRight = keyboard_check(vk_right);
kJump = keyboard_check(vk_up);
kAction = keyboard_check(vk_space);
kActionReleased = keyboard_check_released(vk_space);

if (phy_speed_x &lt; 0)
    dir = LEFT;
if (phy_speed_x &gt; 0)
    dir = RIGHT;
if (kLeft)
    dir = LEFT;
if (kRight)
    dir = RIGHT;

if (abs(phy_speed_x) &lt; spdMax)
{
    if (kLeft)
        physics_apply_force(x,y,-spd,0);
    if (kRight)
        physics_apply_force(x,y,spd,0);
}
if (kJump &amp;&amp; !jumpedEh &amp;&amp; phy_speed_y &gt;= 0)
{
    physics_apply_force(x,y,0,-jmp);
    jumpedEh = true;
}   

if (physics_test_overlap(x,y+1,0,objSolid))
    jumpedEh = false;

if (kAction)
{

    if (ropeCount &lt; maxRopeCount)
    {
        produceRope = true;

        if (rope == noone)
        {
            rope = instance_create(x,y, objRope);
            ropeOrig = rope;
            rope.parent = noone;
            rope.sticky = true;
            rope.orig = ropeOrig;
            
            with(rope)
            {
                //physics_apply_force(x,y,sign(global.player.dir)*40,-40);
            }
        }
        else
        {
            r = instance_create(x,y,objRope);
            r.parent = rope;
            r.orig = ropeOrig;
            with(rope)
            {
                physics_apply_force(x,y,sign(global.player.dir)*40,-40);
            }
            
            attach = physics_joint_rope_create(r,rope,r.x,r.y,rope.x,rope.y,5,false);
            
            rope = r;
            ropeCount += 1;
        }
    } else
    {
        if (produceRope)
        {
            joint = physics_joint_rope_create(self,rope,x,y,rope.x,rope.y,5,false);
        }
        produceRope = false;
    }
}

if (kActionReleased)
{
    produceRope = false;
    
    with (objRope)
        sticky = false;

    rope = noone;
    ropeOrig = noone;
    ropeCount = 0;
    physics_joint_delete(joint);
    
    canShootRope = true;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objThing">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>-1</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>1</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>1</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>50</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>-1</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>8,8</point>
    <point>8,8</point>
  </PhysicsShapePoints>
</object>
