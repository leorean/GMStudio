<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>mskCollectable</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>xVel = -2+random(4);
yVel = 2+random(2);


fMax = 4;
fCur = random(fMax);
fSpeed = .15;

active = false;
t = 1;

falling = false; //if true, coin falls from above
fallVel = 1+random(2);

type = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (active)
{
    angle = point_direction(x,y,objPlayer.x,objPlayer.y);
    xVel = lengthdir_x(t,angle);
    yVel = lengthdir_y(t,angle);
    
    t = min(t+1,4);
    
    if (place_meeting(x+xVel,y+yVel,objPlayer))
    {
        switch(type)
        {
            case T_COIN:
                global.coins++;
                var txt = instance_create(x,y,objDamageText);
                txt.text = "+1";
                txt.color = make_color_hsv(33,255,255);
                txt.xVel = 0;
                txt.yGrav = 0;
            break;
            case T_HP:
                objPlayer.hp = min(objPlayer.hp+1,objPlayer.maxHp);
            break;
        }
        instance_destroy();
    }
} else
{
    xVel *= .9;
    
    if (!falling)
        yVel = max(yVel-.05,-global.yVel);
    else
        yVel = fallVel;
}

if (in(x+xVel,TILE,WIDTH-TILE))
    x += xVel;
else
    xVel = sign(WIDTH/2-x);
    
y += yVel;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!global.gameOver)
    draw_set_alpha(1);
else
    draw_set_alpha(objBg.alpha);

fCur = (fCur + fSpeed) % fMax;

frame = floor(fCur);

draw_sprite_part(sprGraphics,-1,frame*TILE,type*TILE,TILE,TILE,x-TILE/2,y-TILE/2);

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
