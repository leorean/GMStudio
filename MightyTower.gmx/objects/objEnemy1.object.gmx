<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>5</depth>
  <persistent>0</persistent>
  <parentName>objEnemy</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>mask_index = mskMedium;

dir = choose(LEFT,RIGHT);

fCur = 0;
fMax = 4;
fSpeed = .2;

spd = 3;
xVel = sign(dir);
yVel = 0;
yGrav = .1;

maxHp = 3;
hp = maxHp;

state = IDLE;
alive = true;
invincible = 0;

ty = HEIGHT - 8*TILE + random(4)*TILE;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (alive)
{
    invincible = max(invincible-1,0);
    if (invincible)
    {
        dir = sign(xVel);
        xVel *= .99;
        yVel *= .99;    
    } else
    {
        if (abs(x - objFlail.x) &lt; 3*TILE &amp;&amp; abs(y - objFlail.y) &lt; 6*TILE)
            dir = sign(x-objFlail.x);
            
        yVel += (ty-y)/120;
        yVel = sign(yVel)*min(abs(yVel),3);
        xVel += sign(dir)*.1;
        xVel = sign(xVel)*min(abs(xVel),spd);
    }

    if (hp == 0)
    {
        yVel = -2;
        xVel = 0;
        alive = false;
        
        var e = instance_create(x,y,objEffect);
        e.type = 2;
        
        repeat(3)
            instance_create(x,y,objCoin);
    }
    
} else
{
    yVel += yGrav;
    if (y &gt; HEIGHT+2*TILE) instance_destroy();
}


//++++

if (in(x+xVel,TILE,WIDTH-TILE))
    x += xVel;
else
{
    dir = -dir;
    xVel = -sign(xVel);
}
    
y += yVel;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_alpha(1);
fCur = (fCur+fSpeed)%fMax;

var angle = point_direction(x,y,x+abs(xVel),y+yVel*.1);
var frame = floor(fCur);

if (invincible % 3 == 0)
{
    //draw_sprite(mskBoulderBig,-1,x,y);
    draw_sprite_ext(sprEnemy1,frame,x,y,sign(xVel),1,angle,c_white,1);
}
//++++draw health bar
drawHealthBar(x-1*TILE,y-2*TILE);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
