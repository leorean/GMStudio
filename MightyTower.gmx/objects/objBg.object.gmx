<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>100</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>a = 0;
b = 0;

alpha = 1.5;

theme = global.theme;
themeAlpha = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>a = (a-global.yVel * .5) % HEIGHT;
b = (b-global.yVel * .8) % HEIGHT;

draw_sprite_part(sprBg,-1,theme*WIDTH,0,WIDTH,HEIGHT,0,floor(a));
draw_sprite_part(sprBg,-1,theme*WIDTH,0,WIDTH,HEIGHT,0,floor(a)+HEIGHT);

draw_sprite_part(sprBg,-1,theme*WIDTH,HEIGHT,WIDTH,HEIGHT,0,floor(b));
draw_sprite_part(sprBg,-1,theme*WIDTH,HEIGHT,WIDTH,HEIGHT,0,floor(b)+HEIGHT);

if (themeAlpha != 0)
{
    //new theme
    draw_sprite_part_ext(sprBg,-1,global.theme*WIDTH,0,WIDTH,HEIGHT,0,floor(a),1,1,c_white,themeAlpha);
    draw_sprite_part_ext(sprBg,-1,global.theme*WIDTH,0,WIDTH,HEIGHT,0,floor(a)+HEIGHT,1,1,c_white,themeAlpha);
    
    draw_sprite_part_ext(sprBg,-1,global.theme*WIDTH,HEIGHT,WIDTH,HEIGHT,0,floor(b),1,1,c_white,themeAlpha);
    draw_sprite_part_ext(sprBg,-1,global.theme*WIDTH,HEIGHT,WIDTH,HEIGHT,0,floor(b)+HEIGHT,1,1,c_white,themeAlpha);

}

if (global.gameOver)
{
    if (instance_exists(objEnemy))
        objEnemy.hp = 0;
    if (instance_exists(objCoin))
        with(objCoin) draw_set_alpha(objBg.alpha);
        
    alpha = min(alpha+.01,1.5);
    
    if (alpha == 1.5 &amp;&amp; mouse_check_button_pressed(mb_any))
        room_restart();
} else //NOT gameover
{
    alpha = max(alpha - .02,0);
    
    if (theme != global.theme)
    {
        themeAlpha = min(themeAlpha+.005,1);
        if (themeAlpha == 1)
            theme = global.theme;
    } else
    {
        themeAlpha = 0;//max(themeAlpha-.005,0);
    }
    
}

//EFFECT
if (alpha &gt; 0)
{
    draw_set_color(c_white);
    draw_set_alpha(alpha);
    draw_rectangle(0,0,WIDTH,HEIGHT,0);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
