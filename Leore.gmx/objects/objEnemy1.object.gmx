<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>mskEnemy1</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>objEnemy</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>phy_rotation = 0;
phy_fixed_rotation = true;

hp = 0;

dir = RIGHT;

maxSpd = .3;
acc = 100;
fric = .1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//++++flag control
var colL, colR, colD;

colL = collision_point(bbox_left-1,y,objCollider,true,true);
colR = collision_point(bbox_right+1,y,objCollider,true,true);
colD = collision_line(bbox_left+3,bbox_bottom+1,bbox_right-3,bbox_bottom+1,objCollider,true,true);//collision_point(x,bbox_bottom+1,objCollider,true,true);
colU = collision_point(x,bbox_top-1,objCollider,true,true);

onGround = ((physics_test_overlap(x,y+1,0,objCollider)
        || physics_test_overlap(x,y+3,0,objSlope))
    &amp;&amp; (colD));

if (colL &amp;&amp; !colR)
    dir = RIGHT;

if (colR &amp;&amp; !colL)
    dir = LEFT;

if (onGround)
{
    if (dir == LEFT &amp;&amp; phy_speed_x &gt; -maxSpd)
    {
        physics_apply_force(x,y,-acc,-300*onGround);
        if (onGround) state = RUN;
    }
    
    if (dir == RIGHT &amp;&amp; phy_speed_x &lt; maxSpd)
    {
        physics_apply_force(x,y,acc,-300*onGround);
        if (onGround) state = RUN;
    }
    
    if (abs(phy_position_x-phy_position_xprevious) &gt;= 1)
    {
        if (sign(phy_position_x-phy_position_xprevious) &lt;= 0)
            phy_speed_x = min(phy_speed_x + fric, 0);
    }
    if (abs(phy_position_x-phy_position_xprevious) &gt;= 1)
    {
        if (sign(phy_position_x-phy_position_xprevious) &gt;= 0)
        phy_speed_x = max(phy_speed_x - fric, 0);
    }

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objCollider">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();

draw_text(x,y-TILE,hp);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>-1</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>8,8</point>
    <point>6,16</point>
  </PhysicsShapePoints>
</object>
