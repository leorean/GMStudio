<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>mskSpawner</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>timer = 0;
cursor = 0; //which command should be executed
waiting = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (timer == 0 &amp;&amp; !waiting &amp;&amp; cursor &lt; array_length_1d(global.command))
{
    if (string_pos("wave",global.command[cursor]) != 0)
    {
        var tmp;
        tmp = explodeString(global.command[cursor],":");
        timer = real(tmp[1]);
        if (!instance_exists(global.waveText))
        {
            global.waveText = instance_create(0,view_yview[0]+3*TILE,objText);
            global.waveText.free = false;
            global.waveText.halign = fa_right;
            global.waveText.yVel = 0;
            global.waveText.xVel = 3;
            global.waveText.font = fntWave;
            global.waveText.t = 180;
            global.waveText.text = "Wave " + string(global.wave);
        }
    
    }
    else if (string_pos("wait",global.command[cursor]) != 0)
        waiting = true;
    else if (string_pos("spawn",global.command[cursor]) != 0)
    {
        var tmp,e;
        tmp = explodeString(global.command[cursor],":");
        timer = real(tmp[3]);
        e = instance_create(x,y,objEnemy);
        if (tmp[2] == "left") e.dir = LEFT;
        if (tmp[2] == "right") e.dir = RIGHT;
        e.type = real(tmp[1]);
        /*if(real(tmp[1]) == 0)
        {
            e.maxHp = 20;
            e.hp = e.maxHp;
            e.value = 2;
        }*/
    }
    //show_debug_message(timer);
    cursor ++;
}
else
{
    if (waiting)
    {
        if (instance_exists(objEnemy))
            global.waiting = true;

    } else
        timer = max(timer - 1,0);
}



</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>
