<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>objAll</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_index = 0;
depth = 2;

with(objButton)
    instance_destroy();

if (global.input != INPUT_TOUCH)
    global.mouseVisible = true;

if (global.mode != M.TUTORIALMODE)
    if (!instance_exists(objHelpMe))
        instance_create(2*TILE,HEIGHT-6*TILE,objHelpMe);

index = 0;
maxIndex = 3;
showHelp = false;
showHighscore = false;

row = 8;

by = row*TILE - TILE;
bw = 8*TILE;
bx = WIDTH/2-.5*bw;
bh = 3*TILE + ceil(maxIndex*1.5)*TILE;

btn[0] = instance_create(WIDTH/2,row*TILE,objButton);
btn[0].text = "Start";
btn[0].index = 0;
btn[0].parent = id;

btn[1] = instance_create(WIDTH/2,row*TILE+1.5*TILE,objButton);
btn[1].text = "Shop";
btn[1].index = 1;
btn[1].parent = id;

btn[2] = instance_create(WIDTH/2,row*TILE+3*TILE,objButton);
btn[2].text = "PREMIUM";
btn[2].index = 2;
btn[2].parent = id;

btn[3] = instance_create(WIDTH/2,row*TILE+4.5*TILE,objButton);
btn[3].text = "Score";
btn[3].index = 3;
btn[3].parent = id;

//draw_set_font(fntButton); //to set the correct width
textCredits = "by Peter Sperl 2014"; //"=== A game by Peter Sperl Â© 2014 ===";
textCreditsY = HEIGHT+2*TILE;//+string_width(textCredits);

page = 0;

t = pi/2;
z = 0;
xx = 0;
yy = 0;

ti = 0; //highscore iterator
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with (objButton)
    instance_destroy();

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>handleButtons();

//screenPressed = mouse_check_button_released(mb_any) || keyboard_check_released(vk_anykey);

if (btn[0].pressed)
{
    //if (global.mode == M.TUTORIALMODE)
    //    room_goto(TUTORIAL);
    //else
    room_goto(MAIN);
    
}
if (btn[1].pressed)
    room_goto(SHOP);
if (btn[2].pressed)
{

}
if (btn[3].pressed)
{
    if (os_is_network_connected())
    {
        if(!achievement_login_status())
        {
            achievement_login();
        }
        else
        {
            achievement_show_leaderboards();
        }
    }
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed = 0;
draw_set_font(global.fntBig);
draw_set_color(c_white);
draw_set_alpha(1);
draw_set_halign(fa_center);
draw_set_valign(fa_top);

//hover title
t += .05;
if (t&gt;2*pi)
    t = 0;

z = 2*sin(t);

//background
xx = (xx - 1) mod WIDTH;

draw_sprite_part(spriteTitleMenu,-1,0,0,WIDTH,HEIGHT,xx,yy);
draw_sprite_part(spriteTitleMenu,-1,0,0,WIDTH,HEIGHT,xx+WIDTH,yy);
draw_sprite_part(spriteTitleMenu,-1,0,HEIGHT,WIDTH,HEIGHT,0,0);

//drawBorder(7.5*TILE,6*TILE,10*TILE,9*TILE);
drawBorder(bx,by,bw,bh);

//title
draw_set_alpha(1);
draw_set_color(c_white);
draw_sprite_part(spriteTitleMenu,-1,0,2*HEIGHT,WIDTH,HEIGHT,0,-z);

draw_set_halign(fa_left);
drawText(0,HEIGHT-1.5*TILE,"(c) Peter Sperl #Do not distribute!",c_white,c_none,fntTiny);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
