<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-100</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>showbanner = true;
showinterstitial = false;

timer = 30;

px = 160;//display_get_width()/2 - 360/2;
py = 405;//display_get_height() - 60;

if (!global.noads)
{
    GoogleMobileAds_LoadInterstitial();
    GoogleMobileAds_AddBannerAt("ca-app-pub-3438177514702788/3814879955", GoogleMobileAds_Banner,
        px, py);
} else
    instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>GoogleMobileAds_RemoveBanner();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//AD STUFF
showbanner = (os_type == os_android &amp;&amp; !global.noads
    &amp;&amp; ((room == INIT) || ((room == MAIN) &amp;&amp; (global.pause || global.gameOver))));

showinterstitial = (os_type == os_android &amp;&amp; !global.noads
    &amp;&amp; room == MAIN &amp;&amp; !global.pause &amp;&amp; global.gameOver
    &amp;&amp; ((global.playthrough % 5) == 0) &amp;&amp; global.playthrough &gt; 0); //every n-th run

if (timer == 0)
{

    if (!showinterstitial)
    {
    }
    else
    {
        if (GoogleMobileAds_InterstitialStatus() == "Ready")
            GoogleMobileAds_ShowInterstitial();
    }
        
    if (global.noads)
    {
        GoogleMobileAds_RemoveBanner();
        instance_destroy();
    } else
    {
        if (!showbanner)
            GoogleMobileAds_MoveBanner(-1,-1);
        else
            GoogleMobileAds_MoveBanner(px, py);        
    }

    timer = 30;
    
}

timer = max(timer - 1, 0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="70">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var ident = ds_map_find_value(async_load, "type");
var loaded = ds_map_find_value(async_load, "loaded");
if (ident == "banner_load")
{
    if (loaded)
    {
        var bw = ds_map_find_value(async_load, "width");
        var bh = ds_map_find_value(async_load, "height");
        px = display_get_width()/2 - bw/2;
        py = display_get_height() - bh;
        GoogleMobileAds_MoveBanner(px,py);
//        banner = true;
    }
}
else if ident == "interstitial_load"
{
    //?
    //global.interLoading = false; 
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
