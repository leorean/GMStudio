<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>objAll</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//depth = HUDDEPTH;
prevIndex = -1;

mxPrev = mouse_x;
myPrev = mouse_y;    

drawBg = false;
img = -1;

a=0;b=0;c=0;d=0;

//string_width doesnt work with html5 ...
w = 4*TILE;//string_width(text);
h = 1.5*TILE;//string_height(text);

cActive1 = c_white;
cActive2 = c_black;
cInactive1 = make_color_hsv(33,128,255);
//cInactive1 = make_color_hsv(0,0,100);
cInactive2 = c_black;

cDisabled1 = make_color_hsv(0,0,80);
cDisabled2 = c_none;//make_color_hsv(0,0,30);

pressed = false;
active = false;

enabled = true;

mPrevX = mouse_x;
mPrevY = mouse_y;

text = "xxxxx";
fnt = fntButton;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!instance_exists(parent)) instance_destroy();
else
{
    depth = parent.depth-1;
    
    if (enabled)
    {
        
        a = x-w;
        b = y;
        c = x+w;
        d = y+h;
        
        if (global.mouseVisible || global.input == INPUT_TOUCH)
        {
            if (visible &amp;&amp; (in(mouse_x,a,c) &amp;&amp; in(mouse_y,b,d))
             &amp;&amp; (mouse_x != mxPrev || mouse_y != myPrev))
            {
                if (!active) playSound(sfxCaching, 1);
                active = true;
            }
            else
                active = false;
        }
        else
        {
            if (visible &amp;&amp; (parent.index == index))
            {
                if (!active) playSound(sfxCaching, 1);
                active = true;
            }
            else
                active = false;
        }
        
        if (mouse_check_button_released(mb_left)
            &amp;&amp; in(mouse_x,a,c)
            &amp;&amp; in(mouse_y,b,d))
        ||
            ((keyboard_check_released(vk_space) || keyboard_check_released(vk_enter))
            &amp;&amp; index == parent.index)
            pressed = true;
        else
            pressed = false;
        
        if (global.input == INPUT_TOUCH &amp;&amp; !mouse_check_button(mb_left))
        {
            mxPrev = mouse_x;
            myPrev = mouse_y;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed = 0;
//draw_set_font(fntButton);
draw_set_color(c_white);
draw_set_halign(fa_center);
draw_set_valign(fa_top);
draw_set_alpha(1);

//if (prevIndex != parent.index &amp;&amp; prevIndex != -1)
//    playSound(sfxCaching, 1);

if (drawBg)
{
    var r;
    r = (active*3*TILE);//+((active &amp;&amp; mouse_check_button(mb_left)) *3*TILE);
    draw_sprite_part(spriteHud,-1,2*TILE+r,9*TILE,TILE,2*TILE,x-w,y-TILE/3);
    for (i = TILE; i &lt; 2*w - TILE; i+= TILE)
        draw_sprite_part(spriteHud,-1,3*TILE+r,9*TILE,TILE,2*TILE,x-w+i,y-TILE/3);
    draw_sprite_part(spriteHud,-1,4*TILE+r,9*TILE,TILE,2*TILE,x+w-TILE,y-TILE/3);
    
    if (img &gt; -1)
    {
        if (active)
            c = c_white
        else
            c = make_color_hsv(33,128,255);
        draw_sprite_part_ext(spriteHud,-1,8*TILE+2*img*TILE,9*TILE,2*TILE,2*TILE,x-w,y-TILE/3,1,1,c,1);
    }
    
}

if (text != "")
{
    if (enabled)
    {
        if (active)
            drawText(x,y,text,cActive1,cActive2,fnt);
        else
            drawText(x,y,text,cInactive1,cInactive2,fnt);
    } else
        drawText(x,y,text,cDisabled1,cDisabled2,fnt);
}

prevIndex = parent.index;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
