<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>objLiving</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>depth = PLAYERDEPTH+2;
mask_index = sprBlockMask;

alive = true;

pm = global.upgrade[UPGRADE.upPowerUpNew,UPGRADE.TIER];
powTime = global.upgrade[UPGRADE.upPowerUpTime,UPGRADE.TIER];

if (pm == 0)
    type = choose(POW_2);
else if (pm == 1)
    type = choose(POW_2, POW_3);
else if (pm == 2)
    type = choose(POW_1, POW_2, POW_3, POW_4);
else if (pm == 3)
    type = choose(POW_1, POW_2, POW_3, POW_4, POW_5);
else if (pm &gt;= 4)
    type = choose(POW_1, POW_2, POW_3, POW_4, POW_5, POW_6);//, POW_7); not implemented

t = pi/2;

xVel = 0;
yVel = 0;

fCur = 0;
fSpeed = .1;
fMax = 4;
frame = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!global.pause)
{
    //cycle();
    //x -= global.xSpeed;
    if (x &gt; WIDTH || x &lt; -WIDTH)
        instance_destroy();
    
    t += .05;
    if (t &gt;= 2*pi)
        t = 0;
        
    yVel = 2*sin(t*2);
    xVel = (sin(t));

    if (x &gt; WIDTH*.5+2*TILE)
    {
        xVel -= global.xSpeed;
    } else
        xVel = (sin(t));
    
    
    x += xVel;    
    y += yVel;
    
    if (place_meeting(x,y,global.player) &amp;&amp; global.player.state != DEAD)
    {
        playSound(sfxPowerUp,1);
        t = instance_create(x+TILE*.5,y+TILE*.5,objText);
        global.powerUp[type] = true;
        global.powerUp[POW_ANY] = true;
        var pt;
        pt = powTime * 1.5*FPS;
        switch(type)
        {
            case POW_1: //moneeeey
                global.maxPowDuration[type] = 8*FPS + pt;
                t.text = "Golden Shower";
            break;
            case POW_2: //flying
                global.maxPowDuration[type] = 10*FPS + pt;
                t.text = "Crucified Bird";
            break;
            case POW_3: //invincible
                global.maxPowDuration[type] = 12*FPS + pt;
                t.text = "Rainbow Pill";
                global.player.combo += 10;
            break;
            case POW_4:
                global.maxPowDuration[type] = 12*FPS + pt;
                t.text = "Bananarama";
            break;
            case POW_5:
                global.maxPowDuration[type] = 8*FPS + pt;
                t.text = "Chick Magnet";
                with(objProjectilePlayer2)
                    instance_destroy();
                for (i = 0; i &lt; 3; i+= 1)
                {
                    proj = instance_create(objPlayer.cx,objPlayer.y-TILE,objProjectilePlayer2);
                    proj.angle = 90+360 / 3 * i;
                    proj.radius = 1.5*TILE;
                    proj.spd = 6;
                    proj.fCur = 0;
                }
                for (i = 0; i &lt; 3; i+= 1)
                {
                    proj = instance_create(objPlayer.cx,objPlayer.y-TILE,objProjectilePlayer2);
                    proj.angle = 90 + (360 / 3 * i);
                    proj.radius = 2.5*TILE;
                    proj.spd = -3;
                    proj.fCur = 1;
                }
            break;
            case POW_6:
                global.maxPowDuration[type] = 8*FPS + pt;
                t.text = "Red Rocket!";
            break;
        }
        global.powDuration[type] = global.maxPowDuration[type];
        global.powDuration[POW_ANY] = global.maxPowDuration[type]; //maximum.
        instance_destroy();
    }
    
    fCur = (fCur + fSpeed) mod fMax;
    frame = floor(fCur);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed = 0;
draw_sprite_part(spriteGfx,-1,2*frame*TILE,9*TILE,2*TILE,TILE,floor(x)-TILE*.5,floor(y));
draw_sprite_part(spriteGfx,-1,4*TILE+type*TILE,0,TILE,TILE,floor(x),floor(y));
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
