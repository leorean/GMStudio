<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>mskPlayer</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>xVel = 0;
yVel = 0;
yGrav = .22;

dir = RIGHT;

ropeHeight = GROUND - 9*TILE + 4;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (mouse_check_button(mb_left))
{
    if (abs(x - mouse_x) &gt; TILE)
    {
        if (mouse_x &gt; x)
        {
            dir = RIGHT;
            xVel = min(xVel + .2,  2);
        }
        if (mouse_x &lt; x)
        {
            dir = LEFT;
            xVel = max(xVel - .2, -2);
        }
    }
}

xVel *= .95;

yVel += yGrav;
if(y &gt;= ropeHeight)
{
    yVel -= .65;
    if (yVel &lt; 0) // boing!
        yVel = -6;
}

// x collision

if (in(x + xVel, WIDTH/2 - 4.5*TILE, WIDTH/2 + 4.5*TILE))
    x += xVel;
else
    xVel = 0;

// y collision

if (y + yVel &lt; GROUND)
    y += yVel;
else
    yVel = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_color(c_white);
draw_set_alpha(1);

rh = max(y, ropeHeight);
draw_line_width(objStage.x - 5.5*TILE, ropeHeight, x, rh, 2);
draw_line_width(objStage.x + 5.5*TILE, ropeHeight, x, rh, 2);

if (dir == RIGHT)
    draw_sprite_part(sprPlayer, -1, 0, 0, 4*TILE, 4*TILE, round(x) - 2*TILE, round(y) - 4*TILE);
else
    draw_sprite_part_ext(sprPlayer, -1, 0, 0, 4*TILE, 4*TILE, round(x) + 2*TILE, round(y) - 4*TILE, -1, 1, c_white, 1);

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
