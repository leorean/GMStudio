<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>mskWarrior</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>objAny</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// set type in init!
type = -1;
initialized = false;

state = WALK;

xVel = 0;
yVel = 0;
yGrav = .1;

fCur = 0;
frame = 0;

walkSpeed = .5;
runSpeed = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>INIT STATS</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!initialized)
{
    //types: sword warrior, bow, giant, leader
    switch (type)
    {
        case 0:        
            maxHp = 200;
            dmg = 3;
            maxAttackDelay = 40;
            legionState = WALK;
            break;
        case 1:
            maxHp = 30;
            dmg = 5;
            maxAttackDelay = 40;
            break;
    }
    
    hp = maxHp;
    attackDelay = 0;
    initialized = true;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!initialized) exit;

attackDelay = max(attackDelay - 1, 0);

switch(type)
{
    case 0: // LEADER

        var nearestEnemy = 
            instance_nearest(x, y, objEnemy);
        
        switch(legionState)
        {
            case IDLE: //wait for orders
                xVel = 0;
                with(objWarrior) if(hp != 0) state = IDLE;
                if (mouse_check_button_pressed(mb_left))
                    legionState = ATTACK;
                break;
            case WALK: //walk until the next enemy is in sight
                xVel = walkSpeed;
                with(objWarrior) if(hp != 0) state = WALK;
                
                if (instance_exists(nearestEnemy) &amp;&amp; nearestEnemy.x - x &lt; 5*TILE)
                {
                    legionState = IDLE;
                }
                break;
            case ATTACK: // send warriors out or bring them in position to shoot
                xVel = 0;
                if (!instance_exists(objEnemy))
                    legionState = IDLE;
                break;
            case DEFEND: // stop attacking (unless melee and in front of leader) and hold guards
                break;
        }
            
         break;
    case 1: // MELEE WARRIOR
        if (hp &gt; 0)
        {
            switch(global.leader.legionState)
            {
                case IDLE:
                    xVel = 0;
                    break;
                case WALK:
                    xVel = walkSpeed;
                    break;
                case ATTACK:
                    xVel = runSpeed;
                    var enemy = instance_place(x, y, objEnemy);
                    if (!instance_exists(enemy))
                        state = WALK;
                    else
                    {
                        xVel = 0;
                        if (!attackDelay)
                        {
                            state = ATTACK;
                            fCur = 0;
                            attackDelay = maxAttackDelay;
                        }
                    }
                    break;
            }
        }
        break;
}

if (hp == 0)
{
    if (state != DEAD) fCur = 0;
    xVel = 0;
    state = DEAD;
}

x += xVel;






</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var row;
switch(state)
{
    case IDLE:
        fCur = (fCur + .1) % 4;
        row = 0;
        break;
    case WALK:
        fCur = (fCur + .15) % 4;
        row = 1;
        break;
    case ATTACK:
        fCur = min(fCur + .2, 3.9);
        row = 2;
        if (fCur == 3.9)
            state = IDLE;
        break;
    case DEAD:
        fCur = min(fCur + .1, 3);
        row = 3;
        break;
}
frame = floor(fCur);

draw_sprite_part(sprWarrior, -1, frame*TILE, row*TILE + 4*type*TILE, TILE, TILE, x, y);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
