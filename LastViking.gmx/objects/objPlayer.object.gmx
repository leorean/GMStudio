<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>mskPlayer</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>radius = 3*TILE;

maxSpd = 1;
spd = maxSpd;
angle = 0;

xVel = 0;
rot = 0;

cx = (bbox_right+bbox_left)/2;
cy = (bbox_top+bbox_bottom)/2;

hammer = instance_create(cx,cy,objHammer);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!global.paused)
{
    cx = (bbox_right+bbox_left)/2;
    cy = (bbox_top+bbox_bottom)/2;
    
    angle = (angle + rot) % 360;
    rad_angle = ((angle / 180) * pi);
    hammer.x = cx + (cos(rad_angle)) * radius;
    hammer.y = cy - (sin(rad_angle)) * radius;
    hammer.angle = angle;
    hammer.xVel = hammer.x-hammer.xprevious;
    hammer.yVel = hammer.y-hammer.yprevious;
    
    if (mouse_check_button_pressed(mb_left))
    spd = -spd;
    
    if (spd &gt; 0)
    {
        xVel = min(xVel+.01,.5);
        rot = min(rot+.6,9);
    }
    else
    {
        xVel = max(xVel-.01,-.5);
        rot = max(rot-.6,-9);
    }
    
    x += xVel;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
