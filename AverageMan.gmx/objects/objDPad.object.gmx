<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>mskDPad</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-99</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>kLeft = false;
kRight = false;
kUp = false;
kDown = false;

dev = -1;

cx = x;
cy = y;

sx = cx;
sy = cy;

w = 5*TILE;
h = 5*TILE;
radius = w/2-TILE;
forceX = 0;
forceY = 0;

offx = -100; offy = -100;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.state == G_PLAY)
{
    
    for (var i = 0; i &lt; 5; i++)
        if(in(device_mouse_x_to_gui(i),0,0+WIDTH/2))//if (in(device_mouse_x(i),bbox_left,bbox_right)&amp;&amp;in(device_mouse_y(i),bbox_top,bbox_bottom))
            if(device_mouse_check_button(i,mb_left))
            {
                dev = i;
            }
        
    if (!device_mouse_check_button(dev,mb_left))
        dev = -1;
    
    kLeft = false;
    kRight = false;
    kUp = false;
    kDown = false;
    
        
    if (dev&gt;-1)
    {
        if (offx == -100 &amp;&amp; offy == -100)
        {
            offx = device_mouse_x_to_gui(dev);//+view_xview[0];
            offy = device_mouse_y_to_gui(dev);//+view_yview[0];
        }
        
        //cx = device_mouse_x_to_gui(dev)+view_xview[0] + offx;
        //cy = device_mouse_y_to_gui(dev)+view_yview[0] + offy;
        
        var angle = point_direction(offx,offy,device_mouse_x_to_gui(dev),device_mouse_y_to_gui(dev));
        var rad_angle = ((angle / 180) * pi);
            
        sx = x + (cos(rad_angle)) * min(abs(offx-device_mouse_x_to_gui(dev)),radius);
        sy = y -(sin(rad_angle)) * min(abs(offy-device_mouse_y_to_gui(dev)),radius);
        
        if (in(angle,315,360) || in(angle,0,45))
            kRight = true;
            
        if (in(angle,45,135))
            kUp = true;
            
        if (in(angle,135,225))
            kLeft = true;
            
        if (in(angle,225,315))
            kDown = true;
    
        //diagonal
            //if (in(angle,30,60) || in(angle,120,150) || in(angle,210,240) || in(angle,300,330))
        //    diag = true;
        if (in(angle,30,60))
            {kRight = true;kUp = true}
        if (in(angle,120,150))
            {kLeft = true;kUp = true}
        if (in(angle,210,240))
            {kLeft = true;kDown = true}
        if (in(angle,300,330))
            {kRight = true;kDown = true}
    
        
    } else
    {
        offx = -100;
        offy = -100;
        sx = x;
        sy = y;
    //    sx -= (sx - cx) / 4;
    //    sy -= (sy - cy) / 4;
    }
    
    forceX = min(abs(x - sx) / (radius-.5*TILE),1);
    forceY = min(abs(y - sy) / (radius-.5*TILE),1);

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>x = view_xview[0]+offx;
y = view_yview[0]+offy;

draw_set_color(c_black);
draw_set_alpha(1);

//draw_sprite(mskDPad,-1,x,y);
//draw_circle(sx,sy,TILE,1);
if (global.state != G_CAMMOVE)
{
    draw_sprite_part_ext(sprGfx,-1,0,0,5*TILE,5*TILE,x-2.5*TILE,y-2.5*TILE,1,1,c_white,.75);
    draw_sprite_part_ext(sprGfx,-1,5*TILE,3*TILE,2*TILE,2*TILE,sx-1*TILE,sy-1*TILE,1,1,c_white,1);
}

//draw_circle(device_mouse_x_to_gui(0)+view_xview[0],device_mouse_y_to_gui(0)+view_yview[0],TILE,1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
