<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-100</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//global loading stuff

surf = -1;
aspect_x = 1;
aspect_y = 1;


global.state = G_START;

global.btnAttack = noone;
global.btnJump = noone;
global.dPad = noone;
global.camera = noone;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//++++debug etc++++

if (keyboard_check_pressed(vk_escape) || keyboard_check_pressed(vk_backspace))
    game_end();

if (keyboard_check_pressed(ord('R')))
    room_restart();
    
if (keyboard_check_pressed(ord('P')))
    if (global.state == G_PLAY)
        global.state = G_PAUSED;
    else if (global.state == G_PAUSED)
        global.state = G_PLAY;

//++++instance management++++
var off = 3*TILE;

instance_deactivate_object(objLiving);
instance_deactivate_object(objStatic);

instance_activate_region(view_xview[0]-off,view_yview[0]-off,view_wview[0]+2*off,view_hview[0]+2*off,true);

instance_deactivate_object(objLiving);

instance_activate_region(view_xview[0],view_yview[0],view_wview[0],view_hview[0],true);
//++++
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!instance_exists(global.btnAttack))
    global.btnAttack = instance_create(WIDTH-6*TILE,HEIGHT-3*TILE,objButton);
if (!instance_exists(global.btnJump))
global.btnJump = instance_create(WIDTH-3*TILE,HEIGHT-4*TILE,objButton);
if (!instance_exists(global.dPad))
    global.dPad = instance_create(-100,-100,objDPad);

global.camera = instance_create(0,0,objCamera);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_clear(c_black);
//window_set_size(2*WIDTH,2*HEIGHT);
//--------------------------------------------------

//++++SURFACE++++
if (!surface_exists(surf))
{
    //Create (or recreate) the surface when needed
    //QUALITY:
    var w,h;
    //w = view_wport[0]/2; h = view_hport[0]/2;
    w = view_wview[0]; h = view_hview[0];
    surf = surface_create(w,h);
    surface_set_target(surf);
    
    draw_clear(c_black);
    surface_reset_target();
    //Set the view that you want to draw to the surface
    view_surface_id[0] = surf;
        
}
else
{

    //Disable alpha blending (not needed since we are drawing the whole view)
    draw_enable_alphablend(false);
    //Draw the surface stretched to the GUI layer

    var xoffset, yoffset;
    
    if(os_type == os_windows)
    {
        aspect_x = display_get_gui_width() / surface_get_width(surf);
        aspect_y = display_get_gui_height() / surface_get_height(surf);
        
        display_set_gui_size(surface_get_width(surf),surface_get_height(surf));
        
        xoffset = (surface_get_width(surf)*aspect_x)/2;
        yoffset = (surface_get_height(surf)*aspect_y)/2;
        
        draw_surface_ext(surf,display_get_gui_width()/2-xoffset,display_get_gui_height()/2-yoffset,aspect_x,aspect_y,0,c_white,1);  
    }
    else if (os_type == os_android)
    {
        aspect_x = display_get_width() / surface_get_width(surf);
        aspect_y = display_get_height() / surface_get_height(surf);

        xoffset = (surface_get_width(surf)*aspect_x)/2;
        yoffset = (surface_get_height(surf)*aspect_y)/2;

        draw_surface_ext(surf,window_get_width()/2-xoffset,window_get_height()/2-yoffset,aspect_x,aspect_y,0,c_white,1);
    }    
    
    //Switch on alpha blending again for the next normal draw pass
    draw_enable_alphablend(true);
    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
