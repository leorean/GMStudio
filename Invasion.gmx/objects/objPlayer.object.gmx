<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>mskPlayer</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>10</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>xVel = 0;
yVel = 0;
yGrav = .05;

dir = RIGHT;

xprev = x;
yprev = y;

angle = 360;
spd = 0;

path_start(global.path,0,path_action_restart,true);

hp = global.hp;
invincible = 0;
maxInvincible = 60;

attackSpeed = global.attackSpeed;
delay = attackSpeed;

//draw variables
state = IDLE;
statePrev = state;
fCur = 0;
fMin = 0;
fMax = 0;
fSpeed = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.state == STATE_START)
{
    x = path_get_point_x(0,global.path);
    y = path_get_point_y(0,global.path);
    xVel = 0;
    yVel = 0;
    xprev = x;
    yprev = y;
    dir = sign(WIDTH/2-x);
}

if (global.state == STATE_GAMEOVER)
{
    fCur = 0;
    state = DEAD;
    angle = (angle+6) % 360;
    yVel += yGrav;
    x += xVel;
    y += yVel;
    
    if (y &gt; HEIGHT+2*TILE)
        instance_destroy();
}

if (global.state == STATE_PAUSED)
{
    path_speed = 0;
}

if (global.state == STATE_PLAY)
{
    xVel = (x-xprev);
    yVel = (y-yprev);

    invincible = max(invincible - 1, 0);
    if (hp &lt;= 0)
    {
        path_end();
        xVel = 0;//-2+random(4);
        yVel = -1;
        global.state = STATE_GAMEOVER;
    }
    
    var pa = point_direction(x,y,x-xVel,y+.5*TILE);
    if (in(pa,250,290))
        angle = 90 + pa;
    
    if (y-yprev &gt;  0) spd = min(spd+.05,3);
    if (y-yprev &lt;  0) spd = max(spd-.02,1);
    
    path_speed = -spd;
    
    delay = max(delay-1,0);
    
    if (mouse_check_button(mb_left) &amp;&amp; !delay)
    {
        dir = sign(mouse_x-x);
        delay = attackSpeed;

        shootBullet(x,y,mouse_x,mouse_y,4,.1);
        
        //var bulX = x; var bulY = y;
        //var proj = instance_create(bulX,bulY,objAnchorProjectile);
        //instance_create(bulX,bulY,objEffect);
        
        state = ATTACK;
    }
    
    //++++end variables
    xprev = x;
    yprev = y;
    if (statePrev != state) fCur = fMin;
    statePrev = state;

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//draw_sprite_ext(sprGear,-1,x,y,1,1,angle,c_white,1);

//draw_set_color(c_white);
//draw_set_alpha(1);
//draw_line_width(cx,cy,x,y,2);

//draw_sprite_part_ext(sprAssets,-1,0,0,2*TILE,2*TILE,cx+TILE-2*(dir==RIGHT)*TILE,y-.5*TILE,-1+2*(dir==RIGHT),1,c_white,1);

switch(state)
{
    case IDLE:
        fMin = 0;
        fMax = 1;
        fSpeed = .1;
    break;
    case ATTACK:
        fMin = 2;
        fMax = 4;
        fSpeed = .2;
        if (frame &gt;= fMax-1) state = IDLE;
    break;
    case DEAD:
        fCur = 4;
        fMin = 0;
        fMax = 4;
        fSpeed = 0;
    break;
}

fCur = (fCur + (global.state != STATE_PAUSED)*fSpeed) % (fMax + 1);
frame = floor(fMin + fCur);

draw_sprite_ext(sprPlayer,frame,x,y,-1+2*(dir==RIGHT),1,angle,c_white,1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
