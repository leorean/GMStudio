<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>100</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>dx = 0;

sprTrack = -1;

r = array(244,173,173,187,187,151,151,246,051,051,059,059,172,244);
g = array(194,215,215,246,246,185,185,066,071,071,051,051,050,194);
b = array(164,255,255,255,255,253,253,113,089,089,089,089,050,164);

color = c_white;

daytime = 0; //0 ... 100;

day_angle = 0;

night_angle = 0;
radius = HEIGHT+TILE;
sun_x = 0; sun_y = 0;
moon_x = 0; moon_y = 0;
offx = WIDTH/2;
offy = HEIGHT + 3*TILE;


surf = -1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//++++SHADER++++
shader_set(shader0);
draw_clear(c_black);

//++++TRACK GENERATION++++
if (sprTrack == -1)
{
    var tmpSurf;
    tmpSurf = surface_create(view_wview[0], view_hview[0]);
    surface_set_target(tmpSurf);
    view_surface_id[0] = tmpSurf;
    draw_clear_alpha(c_black, 0);
    var prec = 200;
    for(i = 0;i&lt;prec;i++)
    {
        var segAng = point_direction(
            path_get_x(p0,i/prec),path_get_y(p0,i/prec),
            path_get_x(p0,max(i-1,0)/prec),path_get_y(p0,max(i-1,0)/prec));
        draw_sprite_ext(sprSeg,-1,path_get_x(p0,i/prec),path_get_y(p0,i/prec),1,1,segAng,c_white,1);
        //draw_point_color(path_get_x(p0,i/prec),path_get_y(p0,i/prec),c_white);
    }
    
    //draw_surface_stretched(tmpSurf, 0,0, display_get_gui_width(), display_get_gui_height());
    draw_surface(tmpSurf,0,0);
    sprTrack = sprite_create_from_surface(tmpSurf,0,0,view_wview[0],view_hview[0],true,false,0,0);
    
    surface_reset_target();
    surface_free(tmpSurf);
}

//++++DAYTIME EFFECTS++++

if (global.state == STATE_PLAY)
    daytime = (daytime + .01) % 100;

color = make_color_rgb(
    bspline3(daytime/100,array_length_1d(r),r),
    bspline3(daytime/100,array_length_1d(g),g),
    bspline3(daytime/100,array_length_1d(b),b)
);
    
//bg sky
draw_sprite_part_ext(sprBackground,-1,WIDTH,0,WIDTH,HEIGHT,0,0,1,1,color,1);

//++++sun and moon++++
if (keyboard_check(ord('1'))) daytime=(daytime+1)%100;
if (keyboard_check(ord('2'))) daytime=abs((daytime+100-1)%100);

day_angle = 180 - 35 - clamp(daytime/200,0,1)*360;
night_angle = - clamp((-30+daytime)/60,0,1)*360;

var rad_day_angle = (day_angle/180)*pi;
var rad_night_angle = (night_angle/180)*pi;

sun_x = offx + (cos(rad_day_angle) * radius);
sun_y = offy + (-sin(rad_day_angle) * radius);

moon_x = offx + (cos(rad_night_angle) * radius);
moon_y = offy + (-sin(rad_night_angle) * radius);

drawShine(sun_x,sun_y,1);
draw_sprite_part(sprGfx,-1,12*TILE,TILE,3*TILE,3*TILE,sun_x-1.5*TILE,sun_y-1.5*TILE);

drawShine(moon_x,moon_y,.8);
draw_sprite_part(sprGfx,-1,12*TILE,4*TILE,3*TILE,3*TILE,moon_x-1.5*TILE,moon_y-1.5*TILE);

//++++

if (global.state &gt; STATE_PAUSED)
{
    dx = (dx - .25) % WIDTH;
}
//bg moving clouds

draw_sprite_part(sprBackground,-1,3*WIDTH,0,WIDTH,HEIGHT,dx,0);
draw_sprite_part(sprBackground,-1,3*WIDTH,0,WIDTH,HEIGHT,dx+WIDTH,0);

draw_sprite_part_ext(sprBackground,-1,3*WIDTH,0,WIDTH,HEIGHT,dx,0,1,1,color,.7);
draw_sprite_part_ext(sprBackground,-1,3*WIDTH,0,WIDTH,HEIGHT,dx+WIDTH,0,1,1,color,.7);

//bg scenery
draw_sprite_part_ext(sprBackground,-1,2*WIDTH,0,WIDTH,HEIGHT,0,0,1,1,color,1);

//rails/tracks

if (sprite_exists(sprTrack))
    draw_sprite(sprTrack,-1,0,0);

switch(global.path)
{
    case p0:
    /*
    draw_sprite(track0,-1,0,0);
    draw_sprite_ext(track0,-1,0,0,1,1,0,color,.6);
    */
        //draw_path(p0,0,0,true);
    break;
}

//draw_set_blend_mode(bm_normal);

//fg floor
draw_sprite_part(sprBackground,-1,0,192 * (global.timer % 40 &gt; 20),WIDTH,HEIGHT,0,0);



draw_text(0,TILE,daytime);

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
