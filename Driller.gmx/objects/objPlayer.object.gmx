<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>mskPlayer</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>state = IDLE;
dir = DOWN;
xVel = 0;
yVel = 0;
cx = x+TILE/2;
cy = y+TILE/2;
spd = 2;
dmg = 1;

yGrav = .15;
jumpSpd = 3.5;
xSpd = 2;

jumped = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//++++local variables++++
cx = x+TILE/2;
cy = y+TILE/2;
//++++++++

//++++input++++
kLeft = keyboard_check(vk_left);
kRight = keyboard_check(vk_right);
kUp = keyboard_check(vk_up);
kDown = keyboard_check(vk_down);
kAction = keyboard_check(ord('A'));

//++++++++
yVel += yGrav;

onGround = collision_line(bbox_left,bbox_bottom+1,bbox_right,bbox_bottom+1,objSolid,true,true);
if (onGround)
{
    jumped = false;
    yVel = 0;
}

if (kLeft &amp;&amp; !kRight)
{
    if (xVel &lt; 0)
        dir = LEFT;

    if (onGround)
    {
        xVel = max(xVel - .2, -xSpd);
        state = WALK;
    }
    else
    {
        xVel = max(xVel - .2, -xSpd);
        state = JUMP;        
    }
}
if (kRight &amp;&amp; !kLeft)
{
    if (xVel &gt; 0)
        dir = RIGHT;

    if (onGround)
    {
        xVel = min(xVel + .2, xSpd);
        state = WALK;
    }
    else
    {
        xVel = min(xVel + .2, xSpd);
        state = JUMP;
    }
}

if (!kLeft &amp;&amp; !kRight)
{
    xVel = sign(xVel) * max(abs(xVel) - .2, 0);
    state = IDLE;
}

if (kUp &amp;&amp; !jumped)
{
    yVel = -jumpSpd;
    jumped = true;
}

if (!place_meeting(x+xVel,y,objSolid))
    x += xVel;
else
    xVel = 0;
repeat(ceil(abs(yVel*10)))
    if (!place_meeting(x,y+sign(yVel)*.1,objSolid))
        y += sign(yVel)*.1;
    else
        yVel = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>
