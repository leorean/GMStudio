<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1001</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//depth = objControl.depth+1;

//++++preparing win effect
maxWinTimer = 1*60;
winTimer = maxWinTimer;

effectDone = false;
ii = 0;
jj = 0;
for (i = 0; i &lt; WIDTH/TILE; i++)
    for (j = 0; j &lt; HEIGHT/TILE; j++)
        winmap[i,j] = 0;

wy = 0;
maxWy = -HEIGHT*.5+2*TILE;
alpha = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var a = view_xview[0];
var b = view_yview[0];

winTimer = max(winTimer - 1, 0);
//instance_create(a+random(WIDTH),b+random(HEIGHT),objParticle);
wy = max(wy - 1*(winTimer == 0),maxWy);
if (wy == maxWy)
{
    alpha = max(alpha - .1,0);
    if ((keyboard_check_pressed(vk_anykey) || mouse_check_button_pressed(mb_any)))
        room_goto_next();
}
if (!effectDone)
{
    if (ii == WIDTH/TILE) {ii = 0; jj++;}
    winmap[ii,jj] = max(winmap[ii,jj],1);
    winmap[WIDTH/TILE-ii-1,HEIGHT/TILE-jj-1] = max(winmap[WIDTH/TILE-ii-1,HEIGHT/TILE-jj-1],1);
    ii ++;
    if ((HEIGHT/TILE-jj) &lt; jj-1)
    {
        effectDone = true;
        //room_goto_next();
    }
    //if (jj &gt;= HEIGHT/TILE) effectDone = true;
}

for (i = 0; i &lt; WIDTH/TILE; i++)
    for (j = 0; j &lt; HEIGHT/TILE; j++)
    if (winmap[i,j] &gt; 0)
    {
        winmap[i,j] = min(winmap[i,j]+.2,3);
        draw_sprite_part(sprGfx,-1,4*TILE+floor(winmap[i,j])*TILE,TILE,TILE,TILE,a + i*TILE,b + j*TILE);
    }

    
draw_set_font(fntBig);
draw_set_halign(fa_center);
draw_set_valign(fa_center);
draw_set_alpha(alpha);
drawText(a+WIDTH/2,b+HEIGHT/2+wy,"Clear!",c_white,c_black);

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
