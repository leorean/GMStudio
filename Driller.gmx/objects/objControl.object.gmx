<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1000</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>mskPixel</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>window_set_size(2*WIDTH,2*HEIGHT);
window_center();

enum I
{
    TOUCH = 0,
    KEYBOARD = 1
}

//if(os_type == os_android)
{
    global.input = I.TOUCH;
}// else
//    global.input = I.KEYBOARD;

global.timer = 0;
deathTimer = 0;

enum G
{
    PLAY = 0,
    PAUSE = 1,
    GAMEOVER = 2,
    GAMEWIN = 3
}

global.gameState = G.PLAY;
gameStatePrev = global.gameState;

global.hasBlock = -1;
spawnX = -1;
spawnY = -1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (room == INIT)
    room_goto_next();

global.timer = (global.timer + 1) % INFINITE;

if (keyboard_check_pressed(ord('Q')))
    game_restart();

if (keyboard_check_pressed(vk_backspace) || keyboard_check_pressed(vk_escape))
    game_end();

switch (global.gameState)
{
    case G.GAMEOVER:
        deathTimer = max(deathTimer-1,0);
        if (!deathTimer)
            room_restart();
    break;
    case G.GAMEWIN:
        winTimer = max(winTimer-1,0);
        if (!winTimer)
            if (room != room_last)
                room_goto_next();
    break;
    
}

gameStatePrev = global.gameState;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.gameState = G.PLAY;

winTimer = 3*60;
deathTimer = 1.5*60;

global.collect = 0;
global.maxCollect = 0;

var hudX = 0; var hudY = 0;
for (i=0; i &lt; room_width;i+= TILE)
for (j=0; j &lt; room_height;j+= TILE)
{
    tile = tile_layer_find(10,i,j);
    if (tile)
    {
        if (tile_get_top(tile) == 0)
        {
            switch (tile_get_left(tile)/TILE)
            {
                case 0:
                    instance_create(i,j,objPlayer);
                    hudX = i; hudY = j;
                break;
                case 1:
                    instance_create(i,j,objCollectable);
                    global.maxCollect++;
                break;
                case 2:
                    instance_create(i,j,objSpikeUp);
                break;
                case 3:
                    instance_create(i,j,objBlock0);
                break;
                case 4:
                    instance_create(i,j,objBlock1);
                break;
                case 5:
                    instance_create(i,j,objBlock2);
                break;
                case 6:
                    instance_create(i,j,objBlock3);
                break;
                case 7:
                    instance_create(i,j,objBlock4);
                break;
                case 8:
                    instance_create(i,j,objBlock5);
                break;
                case 9:
                    instance_create(i,j,objBlock6);
                break;
                
            }
        }
        if (tile_get_top(tile) != 0)
        {
            instance_create(i,j,objSolid);
        } else
            tile_delete(tile);
    }
}

//++++HUD++++
if (global.input == I.TOUCH)
{
    instance_create(hudX,hudY,objDPad);
    with(objDPad)
        {dx = x; dy = y}
    instance_create(hudX,hudY,objDPadButton1);
    instance_create(hudX,hudY,objDPadButton2);
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>a = view_xview[0];
b = view_yview[0];

draw_set_alpha(1);
draw_set_halign(fa_left);
draw_set_valign(fa_top);
draw_set_font(fntHud);

//draw_text(a,b,string(global.collect)+"/"+string(global.maxCollect));

drawText(a,b,string(global.collect)+"/"+string(global.maxCollect),c_white,c_black);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
