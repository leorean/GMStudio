<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>mskCoin</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10</depth>
  <persistent>0</persistent>
  <parentName>objAny</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>xVel = -2 + random(4);
yVel = -2 + random(4);

value = 0;
taken = false;
canBeTaken = false;

z = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (y &gt; room_height + TILE) instance_destroy();

if (taken)
{
    sp = max(sp + .3, 6);
    move_towards_point(target.x, target.y, sp);

    if (!instance_exists(target) || place_meeting(x, y, target))
    {
        global.coins += value;
        instance_destroy();
    }
}
    else
        sp = 0;

if (!taken)
{
    xVel *= .97;
    yVel *= .97;
    
    if (abs(xVel) &lt; .1 &amp;&amp; abs(yVel) &lt; .1)
        canBeTaken = true;
}

x += xVel;
y += yVel;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var v = 0;

switch(value)
{
    case 1:
        v = 0;
    break;
    case 5:
        v = 1;
    break;
    case 10:
        v = 2;
    break;
    case 50:
        v = 3;
    break;
    case 100:
        v = 4;
    break;
    case 500:
        v = 5;
    break;
    case 2000:
        v = 6;
    break;
}

if (!taken)
{
    z += (sin(global.timer * .02) / 6) * canBeTaken;
    draw_sprite_part(sprMisc, -1, 0, 2*TILE + v * TILE, TILE, TILE, x, y + z);
}
else
    draw_sprite_part(sprMisc, -1, TILE, 2*TILE, TILE, TILE, x, y);

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
