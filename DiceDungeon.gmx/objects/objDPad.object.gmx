<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>mskDPad</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-49</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>w = 5*TILE;
h = 5*TILE;
radius = w/2+.5*TILE;

kLeft = false;
kRight = false;
kUp = false;
kDown = false;

dev = -1;

cx = x;
cy = y;

sx = cx;
sy = cy;

forceX = 0;
forceY = 0;
angle = 0;

offx = x;
offy = y;
//offx = -100; offy = -100;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.state != G_PLAY) exit;

for (var i = 0; i &lt; 5; i++)
    if(in(device_mouse_x_to_gui(i),offx-w/2,offx+w/2)
        &amp;&amp;in(device_mouse_y_to_gui(i),offy-h/2,offy+h/2))
        if(device_mouse_check_button(i,mb_left))
        {
            dev = i;
        }
    
if (!device_mouse_check_button(dev,mb_left))
    dev = -1;

kLeft = false;
kRight = false;
kUp = false;
kDown = false;
    
if (dev&gt;-1)
{
    /*if (offx == -100 &amp;&amp; offy == -100)
    {
        offx = device_mouse_x_to_gui(dev);
        offy = device_mouse_y_to_gui(dev);
        
        //offx = clamp(offx, radius + TILE, view_wview - radius - TILE);
        //offy = clamp(offy, radius + TILE, view_hview - radius - TILE);

    }*/
    
    angle = point_direction(offx, offy, device_mouse_x_to_gui(dev),device_mouse_y_to_gui(dev));
    var rad_angle = ((angle / 180) * pi);

    sx = x + (cos(rad_angle)) * min(abs(offx-device_mouse_x_to_gui(dev)), radius);
    sy = y -(sin(rad_angle)) * min(abs(offy-device_mouse_y_to_gui(dev)), radius);
    
    kRight = in(angle,315,360) || in(angle,0,45);           
    kUp = in(angle,45,135);
    kLeft = in(angle,135,225);
    kDown = in(angle,225,315);

    if (in(angle,30,60))
        {kRight = true; kUp = true}
    if (in(angle,120,150))
        {kLeft = true; kUp = true}
    if (in(angle,210,240))
        {kLeft = true; kDown = true}
    if (in(angle,300,330))
        {kRight = true; kDown = true}
    
} else
{
    //offx = -100;
    //offy = -100;
    sx = x;
    sy = y;
}

forceX = min(abs(x - sx) / (radius-.5*TILE),1);
forceY = min(abs(y - sy) / (radius-.5*TILE),1);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.state != G_PLAY)
{
    sx = x;
    sy = y;
}

x = view_xview + offx;
y = view_yview + offy;

draw_set_color(c_black);
draw_set_alpha(1);

draw_sprite_part_ext(sprHud,-1,0,0,5*TILE,5*TILE,x-2.5*TILE,y-2.5*TILE,1,1,c_white,.75);
draw_sprite_part_ext(sprHud,-1,5*TILE,3*TILE,2*TILE,2*TILE,sx-1*TILE,sy-1*TILE,1,1,c_white,1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
