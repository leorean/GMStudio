<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>mskTower</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// upgrades:

upgrade = 0;
type = 0;
price = 0;

// flags:

placed = false;
free = false;

// stats:

range = 0;
maxDelay = 0;
delay = 0;

// cosmetic:

spawnDelay = 0;
maxSpawnDelay = 30;

fCur = 0;
frame = 0;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>INIT</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// stats
switch(type)
{
    case 0: // TODO: subtype!
        range = 4*TILE;
        maxDelay = 1*SEC;
        dmg = 1;
    break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!placed || global.tower == id)
    depth = 0;
else
    depth = 10 + room_height - y;

if (global.state != G_PLAY) exit;

free = place_free(x, y) &amp;&amp; (bbox_bottom &lt; room_height - 3*TILE);

if (!placed)
{

    x = global.mx - 8;
    y = global.my - 8;

    if (mouse_check_button_released(mb_left))
    {
        if (free)
        {
            global.coins -= price;
            var t = instance_create(x + 8, y, objText);
            t.text = "-"+string(price);
            
            var eff = instance_create(x + 8, y + 8, objEffect);
            eff.type = 2;
            
            placed = true;
            spawnDelay = maxSpawnDelay;
        }
        else
            instance_destroy();
    }
}
else
{
    spawnDelay = max(spawnDelay - global.spd, 0);
    if (spawnDelay) exit;
    
    delay = max(delay - global.spd, 0);

    if (!delay)    
    {
        switch(type)
        {
            case 0: // normal towers. TODO: upgrade nested switch
                var e = findEnemy(x + 8, y + 8, range);

                if (instance_exists(e) &amp;&amp; e.initialized &amp;&amp; e.hp &gt; 0)
                {
                    var proj = instance_create(x + 8,y + 12, objProjectile);
                    proj.angle = point_direction(proj.x, proj.y, e.x, e.y);
                    proj.dmg = dmg;
                    proj.range = range;
                    proj.spd = 3;
                    proj.type = 0;
                    proj.z = -4;
                    delay = maxDelay;
                }                
            break;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_alpha(1);

//if (spawnDelay) exit;

if (global.state != G_PAUSE)
    fCur = (fCur + .1) % 3;
    
frame = floor(fCur);

var sd = 1 - spawnDelay / maxSpawnDelay;

draw_sprite_part_ext(sprTower, -1, frame*2*TILE, type*2*TILE, 2*TILE, 2*TILE, x - sd*TILE + 8, y - sd*TILE + 8, sd, sd, c_white, 1);

//draw_self();

if (global.tower == id &amp;&amp; !spawnDelay)
{
    
    draw_set_blend_mode(bm_add);
    var col = c_white;
    if (!free)
    {
        draw_set_blend_mode(bm_normal);    
        col = c_red;
    }
    draw_set_color(col);
    draw_set_alpha(.3);
    draw_circle(x + 8, y + 8, range, 0);
    draw_set_blend_mode(bm_normal);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
