<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>mskPlayer</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>hp = global.maxHp;

balance = 0;
maxBalance = 4;

fCur = 0;
fMax = 2;
fSpeed = .3;

//the spring
sfCur = 0;
sfMax = 6;
sfSpeed = .1;

dir = NONE;

xVel = 0;
yVel = 0;
ty = HEIGHT/2+3*TILE;

z = 0;
zVel = 0;
zGrav = .12;
zMax = TILE;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//++++steer++++
/*var left = keyboard_check(vk_left) &amp;&amp; !keyboard_check(vk_right);
var right = (keyboard_check(vk_right) &amp;&amp; !keyboard_check(vk_left));*/
/*var left = global.lever.dir == LEFT;
var right = global.lever.dir == RIGHT;

var none = !left &amp;&amp; !right;
if (left) dir = LEFT;
else if (right) dir = RIGHT;
else dir = NONE;
*/
if (global.startTimer == 0)
{
    if (abs(global.yVel) &gt; 0 &amp;&amp; !global.gameOver)
    {
        //++++victims++++
        var victim = instance_place(x+xVel,y+yVel,objVictim);
        if (instance_exists(victim) &amp;&amp; victim.alive)
        {
            global.speedTimer = min(global.speedTimer + global.speedUp,4*global.speedUp);
            victim.hp = 0;
            
            if (global.speedTimer &gt; 0) global.combo++;
            
            if (global.combo &gt; 0)
            {
                var t = instance_create(x,y,objEffectNumber);
                t.text = "x"+string(global.combo);
                t.color = make_color_hsv(45-min(global.combo/30,1)*45,min(global.combo/10,1)*255,255);
                //if (global.combo &gt;= 10) t.size = fnt_big;
                t.size = 1+min(global.combo/20,1)*2;
                
                repeat (global.combo div 3)
                    instance_create(victim.x,victim.y,objCollectable);
            }
        }
        if (global.speedTimer == 0)
            global.combo = 0;
        
        //++++jump++++
        if (keyboard_check(vk_up) &amp;&amp; z == 0) zVel = -3;
        
        dir = sign(xVel);
        balance = -global.lever.angle/12;
        balance = sign(balance)*min(abs(balance),4);
        xVel = sign(balance)*(abs(balance/maxBalance) * 3);
        xVel = sign(xVel) * min(abs(xVel), 3);
        
    } else
    {
        global.gameOver = true;
        balance *= .9;
        xVel *= .9;
    }
}
//y
yVel = (ty - y)/24;
y += yVel;

//x
if (in(x+xVel,TILE,WIDTH-TILE))
{
    x += xVel;
}
else
{
    xVel = 0;
}

//z
zVel += zGrav;
z = min(max(z + zVel, -zMax), 0);
if (z &gt;= 0) z = 0;

depth = ((HEIGHT-y)div TILE) - 20*(z &lt; 0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var row = round(abs(balance/maxBalance) * 3);
if (abs(global.yVel) &gt; 0)
    fCur = (fCur + fSpeed) % fMax;
else
    fCur = 0;
var frame = floor(fCur);

var sc = 1-z/zMax;

if (balance &lt; 0)
{
    draw_sprite_part_ext(sprPlayer,-1,row*3*TILE,fMax*4*TILE,3*TILE,4*TILE,x-1.5*TILE,y-2*TILE,1,1,c_white,.5);
    draw_sprite_part_ext(sprPlayer,-1,row*3*TILE,frame*4*TILE,3*TILE,4*TILE,x-1.5*TILE*sc,y-2*TILE*sc+z*sc,sc,sc,c_white,1);
}
else
{
    draw_sprite_part_ext(sprPlayer,-1,row*3*TILE,fMax*4*TILE,3*TILE,4*TILE,x-1.5*TILE+3*TILE,y-2*TILE,-1,1,c_white,.5);
    draw_sprite_part_ext(sprPlayer,-1,row*3*TILE,frame*4*TILE,3*TILE,4*TILE,x+(1.5*TILE)*sc,y-2*TILE*sc+z*sc,-sc,sc,c_white,1);
}

sfCur = (sfCur + global.yVel*.05) % sfMax;
var sframe = floor(sfCur);

draw_sprite_part_ext(sprPlayer,-1,sframe*3*TILE,12*TILE,3*TILE,TILE,x+(1.5*TILE)*sc,y+1*TILE*sc+z*sc-2*row*sc,-sc,sc,c_white,1);

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
