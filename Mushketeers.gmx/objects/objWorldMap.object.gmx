<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>15</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.curtain.timer = 1*SEC;
global.curtain.state = OPEN;

vel = 0;
focusx = x;
focusy = y;

alpha = 0;

worldPlayer = instance_create(x,y,objWorldPlayer);

btnStartLevel = instance_create(4*TILE,10*TILE,objButton);
btnStartLevel.w = 2*TILE;
btnStartLevel.h = 2*TILE;
btnStartLevel.alpha = .6;
btnStartLevel.offspritex = 8*TILE;

btnQuit = instance_create(17*TILE,10*TILE,objButton);
btnQuit.w = 2*TILE;
btnQuit.h = 2*TILE;
btnQuit.alpha = .6;
btnQuit.offspritex = 10*TILE;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>alpha = min(alpha + .1,1);

if (keyboard_check_pressed(vk_backspace))
    room_goto_previous();
    

mousex = global.mousex;//view_xview[0] + (device_mouse_x(0) / room_width * WIDTH);
mousey = global.mousey//view_yview[0] + (device_mouse_y(0) / room_height * HEIGHT);
   
if (mouse_check_button_pressed(mb_left)
&amp;&amp; !btnStartLevel.pressing &amp;&amp; !btnQuit.pressing)
{
    focusx = mousex;
    focusy = mousey;
}    
if (mouse_check_button(mb_left)
&amp;&amp; !btnStartLevel.pressing &amp;&amp; !btnQuit.pressing)
{
    angle = point_direction(focusx,focusy,mousex,mousey);
    vel = min(vel+.2,4);
    xVel = lengthdir_x(vel,angle);
    yVel = lengthdir_y(vel,angle);    
} else
{
    vel = 0;
    xVel = (worldPlayer.cx - x) / 30;
    yVel = (worldPlayer.cy - y) / 30;
}

x += xVel;
y += yVel;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_blend_mode(bm_normal);
draw_background(sprWorldMap,0,0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
