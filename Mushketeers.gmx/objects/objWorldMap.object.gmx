<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>mskWorldMap</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>15</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.curtain.timer = 1*SEC;
global.curtain.state = OPEN;

vel = 0;
focusx = x;
focusy = y;
dmax = 6*TILE;

//selected level:
target = noone;

//view offset
vx = 0;
vy = 0;

goingToStartLevel = false;
goingToQuit = false;

btnStartLevel = instance_create(WIDTH/2,HEIGHT-3*TILE,objButton);
btnStartLevel.w = 2*TILE;
btnStartLevel.h = 2*TILE;
btnStartLevel.alpha = .6;
btnStartLevel.offspritex = 8*TILE;

btnQuit = instance_create(WIDTH-1*TILE,1*TILE,objButton);
btnQuit.w = 2*TILE;
btnQuit.h = 2*TILE;
btnQuit.alpha = .6;
btnQuit.offspritex = 10*TILE;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with(objLevel) instance_destroy();
with(objWorldPlayer) instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!goingToStartLevel &amp;&amp; !goingToQuit)
{
    
    if (keyboard_check_pressed(vk_backspace) || btnQuit.pressed)
    {
        goingToQuit = true;
        global.curtain.state = CLOSE;
    }
    
    var mx = view_xview[0] + (device_mouse_x(0) / room_width * WIDTH);
    var my = view_yview[0] + (device_mouse_y(0) / room_height * HEIGHT);
    
    var anyButtonPressing = btnStartLevel.pressing || btnQuit.pressing;
    
    if (mouse_check_button_pressed(mb_left) &amp;&amp; !anyButtonPressing)
    {
        focusx = global.mousex;
        focusy = global.mousey;
        
        var tmpLvl = instance_place(mx,my,objLevel);
        if (tmpLvl != noone &amp;&amp; tmpLvl.canBePlayed)
            target = tmpLvl;
        
        with(objLevel) selected = false;
        
        if (target != noone)
        {
            if (target.canBePlayed)
            {
                target.selected = true;
                worldPlayer.current = noone;
                worldPlayer.target = target;
            }
            //else
            //    worldPlayer.target = noone;
        }
    }
    
    if (instance_exists(worldPlayer.target) &amp;&amp; worldPlayer.target.canBePlayed &amp;&amp; worldPlayer.state == IDLE)
    {
        btnStartLevel.visible = true;
        if (btnStartLevel.pressed)
        {
            if ((worldPlayer.x * TILE) div TILE == worldPlayer.target.x
                &amp;&amp; (worldPlayer.y * TILE) div TILE == worldPlayer.target.y)
            {
                goingToStartLevel = true;
                global.curtain.state = CLOSE;
            }
        }
    }
    else
        btnStartLevel.visible = false;
    
    //scrolling
    if (mouse_check_button(mb_left) &amp;&amp; !anyButtonPressing)
    {
        if (focusx != global.mousex || focusy != global.mousey)
        {
            angle = point_direction(focusx, focusy, global.mousex, global.mousey);
            var rad_angle = ((angle / 180) * pi);
            
            var dx = focusx - (cos(rad_angle)) * min(abs(focusx - global.mousex), dmax);
            var dy = focusy + (sin(rad_angle)) * min(abs(focusy - global.mousey), dmax);
            
            var pow = (point_distance(focusx, focusy, dx, dy) / dmax) * 6;
            xVel = lengthdir_x(pow, angle);
            yVel = lengthdir_y(pow, angle);
        }
    } else
    {
        vel = 0;
        xVel = (worldPlayer.cx - x) / 30;
        yVel = (worldPlayer.cy - y) / 30;
    }
    
    x += xVel;
    y += yVel;

}

if (goingToStartLevel)
{
    if (global.curtain.isClosed)
    {
        global.currentLevel = worldPlayer.target.lvlid;
        save();
        
        room_goto(GAME);
    }
}

if (goingToQuit)
{
    if (global.curtain.isClosed)
    {
        room_goto_previous();
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>vx = view_xview[0];
vy = view_yview[0];

draw_set_blend_mode(bm_normal);
//draw_background(sprWorldMap,0,0);
draw_background_part(sprWorldMap,vx,vy,WIDTH,HEIGHT,vx,vy);

draw_set_halign(fa_center);

if (instance_exists(target))
{
    draw_text(vx+WIDTH/2,vy+TILE,target.name);
    
    draw_sprite_part(sprMisc,-1,7*TILE,6*TILE,2*TILE,2*TILE,target.x-.5*TILE,target.y-.5*TILE);
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
