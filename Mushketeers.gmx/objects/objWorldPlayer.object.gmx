<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>mskWorldPlayer</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>frame = 0;
fCur = 0;

cx = x+TILE*.5;
cy = y+TILE*.5;

current = noone;
next = noone;
target = noone;

state = IDLE;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>cx = x+TILE*.5;
cy = y+TILE*.5;

if (current == noone &amp;&amp; global.curtain.isOpen)
{
    current = instance_place(x,y,objLevel);
    if (current != noone)
    {
        show_debug_message("target: " + string(target.lvlid) + ", current: " + string(current.lvlid))
        if (target.lvlid &gt; current.lvlid)
        {
            state = WALK;
            with(objLevel)
                if (lvlid == objWorldPlayer.current.lvlid+1)
                    objWorldPlayer.next = id;
        }
        else if (target.lvlid &lt; current.lvlid)
        {
            state = WALK;        
            with(objLevel)
                if (lvlid == objWorldPlayer.current.lvlid-1)
                    objWorldPlayer.next = id;
        }
    }
}

if (next != noone)
{
    x += sign(next.x - x) * 1;
    y += sign(next.y - y) * 1;
    if (((x * TILE) div TILE) == next.x &amp;&amp; ((y * TILE) div TILE) == next.y)
    {
        x = (x * TILE) div TILE;
        y = (y * TILE) div TILE;
        show_debug_message("arrived to " + string(next.lvlid) + ", target is "+ string(target.lvlid));
        current = noone;
        next = noone;
        state = IDLE;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>fCur = (fCur + .1) % 4;
frame = floor(fCur);

draw_sprite_part(sprMisc,-1,frame*TILE,7*TILE,TILE,TILE,x,y-4);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
