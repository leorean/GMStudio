<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>mskCollect</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>10</depth>
  <persistent>0</persistent>
  <parentName>objStatic</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>fCur = 0;
frame = 0;
t = random(2*pi);
y0 = y;

cx = x+.5*TILE;
cy = y+.5*TILE;

collected = false;
once = false;

angle[0] = random(360);
a[0] = .25;
angle[1] = random(360);
a[1] = .15;
angle[2] = random(360);
a[2] = .2;

alpha = 1;
color = c_white;
ct = random(255);

light = instance_create(cx,cy,objLight);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.state != G_PAUSED)
{
    if (!collected)
    {
        t = (t + .1) % (2*pi);
        y = y0 + sin(t)*4;
    }
    
    ct = (ct + 3) % 255;
    
    cx = x+.5*TILE;
    cy = y+.5*TILE;

    if (instance_exists(light))
    {
        light.x = cx;
        light.y = cy;
    }
    
    angle[0] = (angle[0] - 3) % 360;
    angle[1] = (angle[1] + 1.5) % 360;
    angle[2] = (angle[2] + 1) % 360;
    
    fCur = (fCur + .13) % 8;
    frame = floor(fCur);
    
    if (global.timer % 5 == 0)
    {
        var part = instance_create(cx-4+random(8),cy-4+random(8),objParticleCollect);
        part.color = make_color_hsv(ct,155+random(100),255);
        var ang = point_direction(cx,cy,part.x,part.y);
        part.xVel = lengthdir_x(.5,ang);
        part.yVel = lengthdir_y(.5,ang);        
    }
    
    if (collected)
    {
        if (!once)
        {
            light.alpha = 1;
            light.size = .5;
            once = true;
        }
        y -= 1;
        if (instance_exists(light))
        {
            light.size = .5;
            light.alpha -= .05;
            
            if (light.alpha &lt;= 0)
            {
                with(light) instance_destroy();
                instance_destroy();
            }   
        }
        
        //if (y &lt; y0-TILE)
        //    instance_destroy();
        if (global.timer % 1 == 0)
        {
            var r = 12;
            var g = instance_create(cx-r+random(2*r),cy-r+random(2*r),objEffectGlitter);
            g.color = make_color_hsv(random(255),155+random(100),255);
        }            
    
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!collected)
{
    draw_sprite_ext(sprLight,1,cx,cy,1,1,angle[0],light.c,a[0]);
    draw_sprite_ext(sprLight,1,cx,cy,.9,.9,angle[1],light.c,a[1]);
    draw_sprite_ext(sprLight,1,cx,cy,.7,.7,angle[2],light.c,a[2]);    
}

color = make_color_hsv(ct,255,255);
draw_sprite_part_ext(sprMisc,-1,frame*TILE,0,TILE,TILE,x,y,1,1,color,alpha);
//draw_sprite_part(sprMisc,-1,frame*TILE,0,TILE,TILE,x,y);

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
