<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>mskPlayer</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>onPlatform = false;
xVel = 0;
yVel = 0;
yGrav = .15;

dir = RIGHT;

kLeft = 0;
kRight = 0;
kUp = 0;
kDown = 0;
kJump = 0;
kJumpPressed = 0;
kJumpReleased = 0;

jumped = 0;
jumpVel = 0;
jumpVelMax = 2;

// animations
state = IDLE;
fCur = 0;
fMin = 0;
fMax = 0;
fSpeed = 0;
frame = 0;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>kLeft = keyboard_check(vk_left);
kRight = keyboard_check(vk_right);
kUp = keyboard_check(vk_up);
kDown = keyboard_check(vk_down);
kAttack = keyboard_check(ord('S'));


kJump = keyboard_check(ord('A'));
kJumpPressed = keyboard_check_pressed(ord('A'));
kJumpReleased = keyboard_check_released(ord('A'));

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// flags

onGround = yVel &gt;= 0 &amp;&amp; 
    collision_rectangle(bbox_left, bbox_bottom, bbox_right, 
    bbox_bottom + max(yVel, 1), objSolid, false, true);

// input -&gt; action

kLeft = kLeft &amp;&amp; !kRight;
kRight = kRight &amp;&amp; !kLeft;

if (kLeft) {
    //turn around
    if (xVel &gt; 0) {
        xVel -= .15;
        if (onGround) state = TURN;
    }
    else {
        if (onGround) state = WALK;
        dir = LEFT;
        xVel = max(xVel - .25, -2);
    }
}
else if (kRight) {
    // turn around
    if (xVel &lt; 0) {
        xVel += .15;
        if (onGround) state = TURN;
    }
    else {
        if (onGround) state = WALK;
        dir = RIGHT;
        xVel = min(xVel + .25, 2);
    }
}
else {
    if (onGround) state = IDLE;
    xVel  *= .8;
}

// jumping

if (onGround) {
    jumped = 0;
}
else {
    state = JUMP;
}

if (jumped == 0 &amp;&amp; kJumpPressed) {
    jumped = 1;
    jumpVel = 0;
    state = JUMP;
}
if (jumped == 1) {

    yVel = min(yVel, -3.2);
    
    if (kJump) {
        jumpVel = min(jumpVel + .2, 2.4);
    }
    
    if (jumpVel &gt;= 2.4 || kJumpReleased) {
        jumped = 2;
    }
}

// hit head
if (collision_line(bbox_left, bbox_top + yVel, bbox_right, bbox_top + yVel, objSolid, false, true))
{
    move_contact_solid(90, TILE);
    yVel = max(yVel, 0);
    jumped = 2;
}

// actual movement:

xVel = sign(xVel) * min(abs(xVel), 6);
yVel = sign(yVel) * min(abs(yVel), 6);

yVel += yGrav;
if (!place_meeting(x + xVel, y, objSolid)) {
    x += xVel;
} else {
    xVel = 0;
}
if (!place_meeting(x, y + yVel, objSolid)) {
    y += yVel;
} else {
    move_contact_solid(270, TILE);
    yVel = 0;
}
/*for (var i = 0; i &lt; ceil(yVel); i++) {
    if (!place_meeting(x, y + sign(yVel), objSolid)) {
        y += (yVel / ceil(yVel));
    } else {
        yVel = 0;
        break;
    }
}*/

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>switch(state) {
    case IDLE:
        fMin = 0;
        fMax = 3;
        fSpeed = .12;
    break;
    case WALK:
        fMin = 4;
        fMax = 7;
        fSpeed = .2;
    break;
    case TURN:
        fMin = 8;
        fMax = 8;
        fSpeed = 0;
    break;
    case JUMP:
        fMin = 9;
        fMax = 9;
        fSpeed = 0;
    break;
    case HURT:
        fMin = 10;
        fMax = 10;
        fSpeed = 0;
    break;
    case DEAD:
        fMin = 11;
        fMax = 11;
        fSpeed = 0;
    break;
}
fCur = max(fMin, (fCur + fSpeed) % (fMax + 1));
frame = floor(fCur);

draw_sprite_ext(sprPlayer, frame, x, y, sign(dir), 1, 0, c_white, 1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
