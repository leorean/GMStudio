<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>mskTile</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>objAny</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>xVel = global.xVel + random(3);
yVel = -.5+random(1);
zVel = -2-random(2);
zGrav = .15;
z = 0;

delay = 20;

value = 0;
taken = 0;
fixed = false;

frame = 0;
fCur = irandom(4);
fSpeed = .2;
alpha = 1;

// shadow
shadow = instance_create(x, y, objShadow);
shadow.parent = id;
shadow.offX = 0;
shadow.offY = 7;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (x &lt; view_xview - TILE) instance_destroy();

if (!taken &amp;&amp; !fixed)
{
    zVel += zGrav;
    
    z = min(z + zVel, 0);
    if (z == 0) 
    {
        xVel *= .5;
        yVel *= .5;
        zVel *= -.5;
    }
    delay = max(delay - 1, 0);
    if (!delay)
    {
        if (collision_rectangle(x - global.coinRadius, y - global.coinRadius,
        x + TILE + global.coinRadius, y + TILE + global.coinRadius, objPlayer,
        false, true) &amp;&amp; abs(z - objPlayer.z) &lt; TILE)
        {
            taken = true;
            global.coins += value;
        }
    }
}

if (taken)
{
    fixed = false;

    xVel = (objPlayer.x + TILE - x) / 5;
    yVel = (objPlayer.y - y) / 5;
    z = objPlayer.z;
    
    alpha = max(alpha - .02, 0);
    if (!alpha)
        instance_destroy();
}

if (!place_meeting(x + xVel, y, objSolid))
    x += xVel;
else
    xVel = 0;
    
if (!place_meeting(x, y + yVel, objSolid) &amp;&amp; in(y + yVel, 0, room_height - TILE))
    y += yVel;
else
    yVel = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>fCur = (fCur + fSpeed) % 4;
frame = floor(fCur);

var v = 0;

switch(value)
{
    case 1:
        v = 0;
    break;
    case 5:
        v = 1;
    break;
    case 10:
        v = 2;
    break;
    case 50:
        v = 3;
    break;
    case 100:
        v = 4;
    break;
    case 500:
        v = 5;
    break;
    case 2000:
        v = 6;
    break;
}

draw_sprite_part_ext(sprCoins, -1, frame*TILE, v * TILE, TILE, TILE, x, y + z, 1, 1, c_white, alpha);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
