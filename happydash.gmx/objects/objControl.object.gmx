<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprControlMask</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1000</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>room starts scrolling</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//step
window_center();

//ticker for timed obstacles etc.
global.timer = (global.timer + 1) mod INFINITE;

if (room != INIT &amp;&amp; !global.gameOver)
{
    //global routines here
    if (!global.pause)
    {
    
        //PAUSE GAME
        if (mouse_check_button_pressed(global.key) &amp;&amp; mouse_x &gt;= WIDTH-2*TILE &amp;&amp; mouse_y &gt;= HEIGHT-2*TILE)
            || keyboard_check_pressed(ord('P'))
        {
            global.pause = true;
        }

        //EXP SYSTEM FORMULA AND LEVEL UP
        global.maxCoins = 6 * floor(3 + global.level * power(3, global.level / 45 ) );
        if (global.coins&gt;=global.maxCoins)
        {
            global.xSpeedDefault = min(global.xSpeedDefault + .05, global.xSpeedMax);
            global.level += 1;
            global.coins = 0;
            t = instance_create(objPlayer.cx,objPlayer.cy,objText);
            t.text = "LEVEL UP!";

        }
        //the scrolling speed!!
        if (!alarm[0])
        {
            if (!global.startSignal)
            {
                t = instance_create(WIDTH/2,HEIGHT/2,objText);
                t.fnt = global.fntBig;
                t.text = "go!";
                t.yVel = 0;
                global.hasControl = true;
                global.startSignal = true;
            }
            //if player dashes, speed is higher.
            global.xSpeed = global.xSpeedDefault*((3-1.5*(objPlayer.pow/objPlayer.maxPow)));
            //global.xSpeed = global.xSpeedDefault*((2-(objPlayer.pow/objPlayer.maxPow)/2));
        }
      
        global.distance += global.xSpeed;
        global.segX -= global.xSpeed;
        
        global.spawnSegment = (floor(global.segX) &lt; global.xSpeed);
        //SPAWN NEW SEGMENT
        if(global.spawnSegment)
        {
            global.segX = global.xSpeed + global.segX + WIDTH;
            //global.segX += WIDTH;
            if (objPlayer.state != DEAD)
            {
                var a; //formula to choose next segment
                a = 1 + global.segmentsPerTheme*(floor(global.level / global.levelsPerTheme)) + irandom(global.segmentsPerTheme - 1);

                constructSegment(global.segment[
                    min(max(
                        a,
                        1),
                        global.maxSegments)
                ],global.segX,0);
            }
        }  
    }
    
    else //THIS IS PAUSE MODE!
    {
        //unpause
        if (mouse_check_button_pressed(global.key)
            || keyboard_check_pressed(ord('P')))// &amp;&amp; mouse_x &lt; WIDTH-2*TILE &amp;&amp; mouse_y &lt; HEIGHT-2*TILE)
            global.pause = false;

        global.xSpeed = 0;
    }

}

    //debug keys:   
    if keyboard_check_pressed(ord('R'))
        room_restart();

    if keyboard_check_pressed(ord('Q'))
        game_restart();

    if keyboard_check_pressed(ord('E'))
        {
            global.coins = global.maxCoins-1;
            instance_create(objPlayer.x+TILE/2,objPlayer.y,objCoin);
        }

//GAME OVER
if (global.gameOver)
{
    global.xSpeed = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//room start

view_visible[0] = true;
view_wview[0] = WIDTH;
view_hview[0] = HEIGHT;
view_wport[0] = WIDTH;
view_hport[0] = HEIGHT;

window_center();

with (objGameOverMenu)
    instance_destroy();
    
global.gameOver = false;

if (room == INIT)
{
    instance_create(0,0,objTitleMenu);
    //loadProgress();
}
else
{
    global.coins = 0;
    global.curScore = 0;
    global.addScore = 0;
    global.level = 1;
    global.distMagnet = TILE/2;

    alarm[0]= alarm0;

    global.startSignal = false;

    global.segX = 0;
    global.distance = 0;
    global.xSpeed = 0;
    global.xSpeedDefault = global.xSpeedMin;
    //load start segment
    //constructSegment(global.segment[0], global.segX-global.xSpeed, 0);
    constructSegment(global.segment[0], 0, 0);
    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//THIS EVENT SHALL BE CALLED ONCE PER GAME ONLY!!!

depth = HUDDEPTH;

global.gameTitle = "HAPPY DASH";
//window_set_position(window_get_x() -WIDTH,window_get_y()-HEIGHT);
window_set_size(3*WIDTH,3*HEIGHT);

//GRAPHICS
global.sprTiles = spriteTiles;//sprite_add("gfx/sprTiles.png",0,true,false,0,0);
global.sprEnemies = spriteEnemies;//sprite_add("gfx/sprEnemies.png",0,true,false,0,0);

global.sprBg = spriteBg;//sprite_add("gfx/sprBg.png",0,true,false,0,0);
global.sprTitleMenu = spriteTitleMenu;//sprite_add("gfx/sprTitleMenu.png",0,true,false,0,0);

global.sprGfx = spriteGfx;//sprite_add("gfx/sprGfx.png",0,true,false,0,0);
global.sprHud = spriteHud;//sprite_add("gfx/sprHud.png",0,true,false,0,0);
global.sprPlayer = spritePlayer;//sprite_add("gfx/sprPlayer.png",0,true,false,0,0);

//FONTS
global.fntBig = font_add_sprite(spriteFontBig,ord(' '),true,1);
global.fntDefault = font_add_sprite(spriteFontDefault,ord(' '),true,1);
global.fntCombo = font_add_sprite(spriteFontCombo,ord('!'),true,0);

//PARTICLE RECYCLE
global.mParticle = 256;
global.iParticle = 0;
for (i = 0; i &lt; global.mParticle; i+=1)
    global.particle[i] = instance_create(TILE+i,TILE,objParticle);


//SEGMENTS

global.maxSegments = 20;
for (i = 0; i &lt;= global.maxSegments;i+=1)
    global.segment[i] = importSegment("seg"+string(i)+".tmx");


//local stuff
alarm0 = FPS;
alarm[0] = alarm0;

//score stuff
global.curScore = 0; //main score
global.addScore = 0; //pieces of score due to combos and coins
global.scoreCount = 5;
for (i = 0; i &lt; global.scoreCount; i+=1)
    global.scores[i] = 0;

//global variables/flags
global.pause = false;
global.mouseVisible = false;
global.gameOver = false;

global.coins = 0;
global.maxCoins = 0;
global.level = 1; //difficulty display
global.distMagnet = TILE/2; //distance to catch coins and items

global.key = mb_left;
global.hasControl = true;
global.timer = 0;

global.startSignal = false;

global.xSpeed = 0; // every object is moved by this speed
global.xSpeedMin = 1; // speed at each start
global.xSpeedMax = 4; // maximum speed
global.xSpeedDefault = global.xSpeedMin; // storage for the speed. this shall be increased over time/achievement/distance

global.distance = 0;
global.xSeg = 0;
global.spawnSegment = false;

global.levelsPerTheme = 5; //n levels until next theme
global.segmentsPerTheme = 10; //n segments for each theme
global.theme = 0;//background theme
global.maxTheme = 1; //maximum number of available themes

// SAVE FILE MANAGEMENT &amp; ENCRYPTION
/*
dll="Crypt.dll";
global.encD_md5_fil=external_define(dll,"md5_hash_file",dll_stdcall,ty_string,1,ty_string);
global.encD_md5_str=external_define(dll,"md5_hash_string",dll_stdcall,ty_string,1,ty_string);

global.saveFile = "misc/sv";
global.checkFile = "misc/chk";
global.mdpw = md5("1337haxorpenis");

var file, checksum;

//create checkfile
if (!file_exists(global.checkFile))
{
    file = file_text_open_write(global.checkFile);
    checksum = string(md5File(global.saveFile))+string(md5(global.mdpw));
    file_text_write_string(file,checksum);
    file_text_close(file);
} else //read checksum from checkFile
{
    file = file_text_open_read(global.checkFile);
    checksum = file_text_read_string(file);//string(md5File(global.saveFile))+string(md5(global.mdpw));
    file_text_close(file);
}

//overwrite savefile with zero score
if (!file_exists(global.saveFile))
    saveProgress();
else if (string(md5File(global.saveFile))+string(md5(global.mdpw)) != checksum)
    saveProgress();

loadProgress();
*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//draw

//GUI etc
draw_set_font(global.fntDefault);
draw_set_color(c_white);
draw_set_alpha(1);
draw_set_valign(fa_top);

if (room != INIT)
{

    if (global.pause)
    {
    
        draw_set_alpha(.5);
        draw_set_color(c_black);
        draw_rectangle(0,0,WIDTH,HEIGHT,0);
        draw_set_color(c_white);
        draw_set_alpha(1);
        
        draw_set_halign(fa_center);
        draw_set_valign(fa_center);
        draw_text(WIDTH/2,HEIGHT/2,"PAUSE");
        draw_set_valign(fa_top);
    
    }
    
    a = 0
    b = 0;

    //COINS    
    draw_set_halign(fa_left);
    draw_text(0,0, " $ " + string(global.coins)+ " / "+string(global.maxCoins));

    //SCORE       
    draw_set_halign(fa_left);
    draw_text(a,HEIGHT-TILE," &amp; " + string(global.curScore));

    //LEVEL    
    draw_set_halign(fa_right);
    draw_text(WIDTH,0,"LVL " + string(global.level) + " ");

    //CHARGE BAR
    draw_sprite_part(global.sprHud,-1,0,2*TILE,4*TILE,TILE/2,WIDTH/2-2*TILE,HEIGHT-3*TILE/4);
    draw_sprite_part(global.sprHud,-1,0,2.5*TILE,4*TILE*min(max((objPlayer.pow/objPlayer.maxPow),0),1),TILE/2,WIDTH/2-2*TILE,HEIGHT-3*TILE/4);
    
    //PAUSE BUTTON
    draw_sprite_part(global.sprHud,-1,2*TILE*global.pause,3*TILE,2*TILE,2*TILE,WIDTH-2*TILE,HEIGHT-2*TILE);
}

//MOUSE CURSOR
if (global.mouseVisible)
    draw_sprite_part(global.sprHud,-1,0+2*TILE*mouse_check_button(mb_left),0,2*TILE,2*TILE,mouse_x-TILE,mouse_y-TILE);

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
