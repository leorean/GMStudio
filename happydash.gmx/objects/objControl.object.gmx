<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprControlMask</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>objAll</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>room starts scrolling</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//step

//ticker for timed obstacles etc.
global.timer = (global.timer + 1) mod INFINITE;

//MUTE/UNMUTE
if (mouse_check_button_pressed(mb_any) &amp;&amp; (in(mouse_x,WIDTH-2*TILE,WIDTH) &amp;&amp; in(mouse_y,0,2*TILE)))
    || keyboard_check_pressed(ord('M'))
    {
        global.mute = !global.mute;
    }


if (room != INIT &amp;&amp; !global.gameOver)
{

    //global routines here
    if (!global.pause)
    {
    
        //PAUSE GAME
        if (mouse_check_button_pressed(mb_any) &amp;&amp; (in(mouse_x,WIDTH-2*TILE,WIDTH) &amp;&amp; in(mouse_y,HEIGHT-2*TILE,HEIGHT)))
            || keyboard_check_pressed(ord('P'))
                global.pause = true;

        //EXP SYSTEM FORMULA AND LEVEL UP
        global.maxCoins = 6 * floor(3 + global.level * power(3, global.level * .022 ) );
        if (global.coins&gt;=global.maxCoins)
        {
            global.xSpeedDefault = min(global.xSpeedDefault + .025, global.xSpeedMax);
            global.level += 1;
            global.coins = 0;
            t = instance_create(global.player.cx,global.player.cy,objText);
            t.text = "LEVEL UP!"
            playSound(sfxLevelUp);
            if (global.level mod 5 == 0)
            {
                while (global.theme == global.themePrev)
                    global.theme = floor(irandom(global.maxTheme));
                playSound(sfxThemeChange);
            }

        }
        //the scrolling speed!!
        if (!alarm[0])
        {
            if (!global.startSignal)
            {
                //t = instance_create(WIDTH*.5,HEIGHT*.5,objText);
                //t.fnt = global.fntBig;
                //t.text = "go!";
                //t.yVel = 0;
                instance_create(0,0,objStartLevel);
                playSound(sfxStart);
                global.hasControl = true;
                global.startSignal = true;
            }
            //if player dashes, speed is higher.
            global.xSpeed = global.xSpeedDefault*((3-1.5*(global.player.pow/global.player.maxPow)));
        }
        if (objPlayer.state != DEAD)
            global.distance += global.xSpeed;
        else
            global.xSpeed = 0;
            
        global.segX -= global.xSpeed;
        
        global.spawnSegment = (floor(global.segX) &lt; global.xSpeed);
        //SPAWN NEW SEGMENT
        if(global.spawnSegment)
        {
            global.segX = global.xSpeed + global.segX + WIDTH;
            //global.segX += WIDTH;
            if (global.player.state != DEAD)
            {
                //a = 1 + global.segmentsPerTheme*(floor(global.level / global.levelsPerTheme)) + irandom(global.segmentsPerTheme - 1);
                while (global.curSeg == global.prevSeg)                
                    global.curSeg = 1 + global.theme * global.segmentsPerTheme + floor(irandom(global.segmentsPerTheme - 1));
                
                constructSegment(global.segment[
                    min(max(
                        global.curSeg,
                        1),
                        global.maxSegments)
                ],global.segX,0);
                global.prevSeg = global.curSeg;
            }
            global.difficulty += 1;
        }  
    }
    
    else //THIS IS PAUSE MODE!
    {
        //unpause
        if (keyboard_check_pressed(ord('P'))
            || (mouse_check_button_pressed(mb_any) &amp;&amp; (!in(mouse_x,WIDTH-2*TILE,WIDTH) || !in(mouse_y,0,2*TILE))))
            global.pause = false;

        global.xSpeed = 0;
    }

}

if (global.gameOver)
    global.pause = false;

//if in title menu:

if (room == INIT || global.gameOver)
    playMusic(sfxBgm,false);
else
    playMusic(sfxBgm,!global.mute);

if keyboard_check_pressed(vk_escape)
    game_end();

if (global.input == INPUT_TOUCH)
    global.mouseVisible = false;

//debug keys:   
if keyboard_check_pressed(ord('R'))
    room_restart();

if keyboard_check_pressed(ord('Q'))
    room_goto(INIT);

//TODO: REMOVE THIS
if keyboard_check_pressed(ord('E'))
{
    global.coins = global.maxCoins-1;
    instance_create(global.player.x+TILE*.5,global.player.y,objCoin);
}

if keyboard_check(ord('C'))
{
    global.player.combo += 1;
    global.player.yVel = 0;
}

//GAME OVER
if (global.gameOver)
    global.xSpeed = 0;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//room start

view_visible[0] = true;
view_wview[0] = WIDTH;
view_hview[0] = HEIGHT;
view_wport[0] = WIDTH;
view_hport[0] = HEIGHT;

with (objGameOverMenu)
    instance_destroy();

with (objTitleMenu)
    instance_destroy();
    
global.gameOver = false;

if (room == INIT)
{
    instance_create(0,0,objTitleMenu);
    loadProgress();
}
else
{
    global.coinsCollected = 0;
    global.enemiesKilled = 0;
    global.maxCombo = 0;
    global.coins = 0;
    global.curScore = 0;
    global.addScore = 0;
    global.level = 1;
    global.theme = floor(irandom(global.maxTheme));
    global.themePrev = global.theme;
    objCamera.theme = global.theme * WIDTH;
    
    alarm[0]= alarm0;

    global.startSignal = false;
    
    global.difficulty = 0;
    
    global.curSeg = 0;
    global.prevSeg = 0;
    global.segX = 0;
    global.distance = 0;
    global.xSpeed = 0;
    global.xSpeedDefault = global.xSpeedMin;
    
    //load start segment
    //constructSegment(global.segment[0], global.segX-global.xSpeed, 0);
    constructSegment(global.segment[0], 0, 0);
    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with (objAll)
    instance_destroy();

if (surface_exists(global.drawBuffer))
    surface_free(global.drawBuffer);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//THIS EVENT SHALL BE CALLED ONCE PER GAME ONLY!!!

depth = HUDDEPTH;
randomize();

//surface_set_target(global.drawBuffer);
//surface_reset_target();

//SOUNDS
global.mute = false;
sound_global_volume(.3);
audio_master_gain(.3);
audio_sound_gain(sfxBgm,.5,0);

//INPUT TYPE
global.input = INPUT_KEYBOARD; //INPUT_TOUCH, INPUT_KEYBOARD, INPUT_MOUSE

//FONTS
global.fntBig = font_add_sprite(spriteFontBig,ord(' '),true,1);
global.fntDefault = font_add_sprite(spriteFontDefault,ord(' '),true,1);
global.fntCombo = font_add_sprite(spriteFontCombo,ord('0'),true,1);

//SEGMENTS

global.maxSegments = 60;
global.segment[global.maxSegments] = 0;
for (i = 0; i &lt;= global.maxSegments;i+=1)
    global.segment[i] = importSegment(string(i)+".tmx");

//PLAYER VARIABLE
global.player = noone;
    
//local stuff
alarm0 = FPS;
alarm[0] = alarm0;

//score stuff
global.maxCombo = 0; //highest combo
global.curScore = 0; //main score
global.addScore = 0; //pieces of score due to combos and coins
global.scoreCount = 5;
for (i = 0; i &lt; global.scoreCount; i+=1)
    global.scores[i] = 0;

//global variables/flags
global.pause = false;
global.mouseVisible = false;
global.gameOver = false;

global.coinsCollected = 0;
global.enemiesKilled = 0;

global.coins = 0;
global.maxCoins = 0;
global.level = 1; //difficulty display
global.distMagnet = 1.5*TILE; //distance to catch coins and items

global.hasControl = true;
global.timer = 0;

global.startSignal = false;

global.xSpeed = 0; // every object is moved by this speed
global.xSpeedMin = 1; // speed at each start
global.xSpeedMax = 4; // maximum speed
global.xSpeedDefault = global.xSpeedMin; // storage for the speed. this shall be increased over time/achievement/distance

global.difficulty = 0;//used for randomizing objects within segments

global.distance = 0;
global.xSeg = 0;
global.spawnSegment = false;

global.curSeg = 0;
global.prevSeg = 0;

global.segmentsPerTheme = 20; //n segments for each theme
global.theme = 0;//background theme
global.themePrev = global.theme;
global.maxTheme = 2; //maximum number of available themes - 1

global.saveFile = 'sv.ini';

// SAVE FILE MANAGEMENT &amp; ENCRYPTION
/*
dll="Crypt.dll";
global.encD_md5_fil=external_define(dll,"md5_hash_file",dll_stdcall,ty_string,1,ty_string);
global.encD_md5_str=external_define(dll,"md5_hash_string",dll_stdcall,ty_string,1,ty_string);

global.saveFile = "misc/sv";
global.checkFile = "misc/chk";
global.mdpw = md5("1337haxorpenis");

var file, checksum;

//create checkfile
if (!file_exists(global.checkFile))
{
    file = file_text_open_write(global.checkFile);
    checksum = string(md5File(global.saveFile))+string(md5(global.mdpw));
    file_text_write_string(file,checksum);
    file_text_close(file);
} else //read checksum from checkFile
{
    file = file_text_open_read(global.checkFile);
    checksum = file_text_read_string(file);//string(md5File(global.saveFile))+string(md5(global.mdpw));
    file_text_close(file);
}

//overwrite savefile with zero score
if (!file_exists(global.saveFile))
    saveProgress();
else if (string(md5File(global.saveFile))+string(md5(global.mdpw)) != checksum)
    saveProgress();

loadProgress();
*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//GUI etc
draw_set_font(global.fntDefault);
draw_set_color(c_white);
draw_set_valign(fa_top);

//MUTE BUTTON
draw_sprite_part(spriteHud,-1,4*TILE+global.mute*2*TILE,3*TILE,2*TILE,2*TILE,WIDTH-2*TILE,0);

if (room != INIT &amp;&amp; !global.gameOver)
{

    if (global.pause)
    {
    
        draw_set_alpha(.5);
        draw_set_color(c_black);
        draw_rectangle(0,0,WIDTH,HEIGHT,0);
        draw_set_color(c_white);
        draw_set_alpha(1);
        
        draw_set_halign(fa_center);
        draw_set_valign(fa_center);
        draw_text(WIDTH*.5,HEIGHT*.5,"PAUSE");
        draw_set_valign(fa_top);
    
    }
    
    a = 0
    b = 0;

    //COINS    
    draw_set_halign(fa_left);
    draw_text(0,0, " $ " + string(global.coins)+ " / "+string(global.maxCoins));

    //SCORE       
    draw_set_halign(fa_left);
    draw_text(a,HEIGHT-TILE," &amp; " + string(global.curScore));

    //LEVEL    
    //draw_set_halign(fa_right);
    draw_text(0,TILE," LVL " + string(global.level) + " ");

    //CHARGE BAR
    draw_sprite_part(spriteHud,-1,0,2*TILE,4*TILE,TILE*.5,WIDTH*.5-2*TILE,HEIGHT-.5*TILE);
    draw_sprite_part(spriteHud,-1,0,2.5*TILE,4*TILE*min(max(1-(global.player.pow/global.player.maxPow),0),1),TILE*.5,WIDTH*.5-2*TILE,HEIGHT-.5*TILE);
    
    //PAUSE BUTTON
    draw_sprite_part(spriteHud,-1,2*TILE*global.pause,3*TILE,2*TILE,2*TILE,WIDTH-2*TILE,HEIGHT-2*TILE);
    
    //meters
    draw_set_halign(fa_center);
    draw_text(WIDTH/2,HEIGHT-1.5*TILE,string(floor(global.distance*.1))+"m");
    
    //combo counter
    if (global.player.combo &gt; 0 &amp;&amp; global.player.state != DEAD)
    {
        /*
        draw_set_halign(fa_center);
        draw_set_valign(fa_top);
        draw_set_font(global.fntCombo);
    
        draw_set_alpha(.5);
        draw_set_color(c_black);
        draw_text(cx+2,y-TILE+2,":"+string(combo));
    
        draw_set_alpha(1);
        */
        draw_set_halign(fa_center);
        draw_set_valign(fa_center);
        draw_set_font(global.fntCombo);
        draw_sprite_part(spriteHud,-1,4*TILE,0,4*TILE,2*TILE,0,2*TILE);
        var c;
        c = make_color_hsv(
            max(min(35,35-global.player.combo*2),-150),
            max(min(255,255-global.player.combo*.75),150),
            255);
        draw_set_color(c);
        draw_text(2*TILE,3*TILE,":"+string(global.player.combo));
        draw_set_color(c_white);
    }
}

//MOUSE CURSOR
if (global.mouseVisible)
    draw_sprite_part(spriteHud,-1,0+2*TILE*mouse_check_button(mb_left),0,2*TILE,2*TILE,mouse_x-TILE,mouse_y-TILE);


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>8,8</point>
  </PhysicsShapePoints>
</object>
