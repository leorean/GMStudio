<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>2</depth>
  <persistent>0</persistent>
  <parentName>objAll</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>depth = HUDDEPTH+2;
index = 0;
maxIndex = 2;

if (global.input != INPUT_TOUCH)
    global.mouseVisible = true;

finalScore = global.curScore;

btn[0] = instance_create(WIDTH/2,HEIGHT/2+1.5*TILE,objButton);
btn[0].text = "Shop";
btn[0].index = 0;
btn[0].parent = id;

btn[1] = instance_create(WIDTH/2,HEIGHT/2+3.5*TILE,objButton);
btn[1].text = "Retry";
btn[1].index = 1;
btn[1].parent = id;

btn[2] = instance_create(WIDTH/2,HEIGHT/2+5.5*TILE,objButton);
btn[2].text = "Quit";
btn[2].index = 2;
btn[2].parent = id;

//effect
dx = -2*TILE;
dxx = -WIDTH*.5;
dy = 1*TILE;
t = 0;
m = 0;

playSound(sfxRocketFall,1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with (objButton)
    instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>handleButtons();
if (btn[0].pressed)
    room_goto(SHOP);
if (btn[1].pressed)
    room_restart();
if (btn[2].pressed)
    room_goto(INIT);


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed = 0;

draw_set_alpha(.5);
draw_set_color(c_black);
draw_rectangle(0,0,WIDTH,HEIGHT,0);

draw_set_font(global.fntDefault);
draw_set_color(c_white);
draw_set_alpha(1);
draw_set_halign(fa_center);
draw_set_valign(fa_top);

//rainbow effect
draw_set_alpha(.7);
for (i = 0; i &lt; TILE; i+=1)
{
    draw_set_color(make_color_hsv((i div 2)*22,255,255));
    draw_line_width(-2*TILE,dy+i,dx+TILE-abs(TILE/2-i),dy+i,1);
}
draw_set_alpha(1);
draw_set_color(c_white);

//player effect
if (dx &lt; WIDTH+2*TILE)
{
    dx = min(dx+8,WIDTH+2*TILE);
    draw_sprite_part(spritePlayer,-1,(floor(global.timer/3) mod 4)*2*TILE,6*TILE,2*TILE,2*TILE,dx-TILE/2,dy-TILE/2);
    if (global.timer mod 3 == 0)
    {
        e = instance_create(dx-TILE+random(2*TILE),dy-TILE+random(2*TILE),objEffectDust);
        e.type = 3;
        e.depth = depth-1;
        e.xVel = -1+random(2);
        e.yVel = -1+random(2);
    }
    
} else
{
    if (global.timer mod 2 == 0)
    {
        c = instance_create(random(WIDTH),-TILE,objEffectConfetti);
        c.depth = depth-2;
    }
}

//score effect
if (dxx &lt; WIDTH*.5)
    dxx = min(dxx+4,WIDTH*.5);
else
{
    if (m &lt;5)
    {
        t +=1;
        if (t &gt; 5)
        {
            playSound(sfxCaching,1);
            m+=1;
            t = 0;
        }
    } else
    if (global.timer mod 5 = 0)
    {
        t = instance_create(WIDTH*.5-4*TILE+random(8*TILE)-TILE/2,dy-TILE+random(2*TILE)-TILE/2,objEffectDust);
        t.type = 7;
        t.depth = depth-1;
    }
}
//


var row,d;
row = 2.5;
d = 11*TILE;

draw_set_font(global.fntScore);
draw_text(min(dxx,WIDTH*.5), dy-.5*TILE,":"+string(finalScore)+":");

//draw_set_font(global.fntDefault);

var c1,c2,f;
c1 = c_white;
c2 = c_none;
f = fntMenu;

draw_set_halign(fa_center);
switch(m)
{
    case 5: drawText(WIDTH*.5, (row+4)*TILE,"Enemies killed: " + string(global.enemiesKilled),c1,c2,f);
    case 4: drawText(WIDTH*.5, (row+3)*TILE,"Distance: " + string(floor(global.distance*.1))+"m",c1,c2,f);
    case 3: drawText(WIDTH*.5, (row+2)*TILE,"Level: " + string(global.level),c1,c2,f);
    case 2: drawText(WIDTH*.5, (row+1)*TILE,"Highest Combo: " + "x"+string(global.maxCombo),c1,c2,f);
    case 1: drawText(WIDTH*.5, (row+0)*TILE,"Coins collected: " +string(global.coinsCollected),c1,c2,f);
    break;
}
/*
draw_set_halign(fa_right);
switch(m)
{
    case 5: drawText(WIDTH*.5+d, (row+4)*TILE,string(global.enemiesKilled),c1,c2,f);
    case 4: drawText(WIDTH*.5+d, (row+3)*TILE,string(floor(global.distance*.1)),c1,c2,f);
    case 3: drawText(WIDTH*.5+d, (row+2)*TILE,string(global.level),c1,c2,f);
    case 2: drawText(WIDTH*.5+d, (row+1)*TILE,"x"+string(global.maxCombo),c1,c2,f);
    case 1: drawText(WIDTH*.5+d, (row+0)*TILE,string(global.coinsCollected),c1,c2,f);
    break;
}*/

drawBorder(8.5*TILE,8*TILE,8*TILE,7*TILE);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
