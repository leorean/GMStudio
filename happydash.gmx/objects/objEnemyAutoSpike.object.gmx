<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprEnemyAutoSpikeMask</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>objLivingEnemy</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed = 0;

state = DEAD;

active = true;
depth = BLOCKDEPTH-1;
look = UP;
t = 2*FPS;
dir = NONE;

fCur = 0;
fSpeed = .25;
fMax = 4;

hasShot = true;

checking = TILE;

knockedUp = false;
alive = true;
yGrav = .15;
yVel = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//x -= global.xSpeed;

if (!global.pause)
{

    cycle ();
    if (alive)
    {
        if (checking &gt; 0)
        {
            cx = x+TILE*.5-ceil(global.xSpeed);
            cy = y+TILE*.5;

            r = collision_point(cx-TILE,cy,objSolid,false,true);
            l = collision_point(cx+TILE,cy,objSolid,false,true);
            d = collision_point(cx,cy-TILE,objSolid,false,true);
            u = collision_point(cx,cy+TILE,objSolid,false,true);
    
            if (l &amp;&amp; !r) dir = LEFT;
            if (r &amp;&amp; !l) dir = RIGHT;
    
            if (d &amp;&amp; !u) dir = DOWN;
            if (u &amp;&amp; !d &amp;&amp; !l &amp;&amp; !r) || (u &amp;&amp; l &amp;&amp; r) dir = UP;

            if (dir == UP) mask_index = sprEnemyMaskUp;;
            if (dir == DOWN) mask_index = sprEnemyMaskDown;
            if (dir == LEFT) mask_index = sprEnemyMaskLeft;
            if (dir == RIGHT) mask_index = sprEnemyMaskRight;

            if (!u &amp;&amp; !d &amp;&amp; !l &amp;&amp; !r) instance_destroy();
                        
            checking = max(checking - 1, 0);
        }
        
        if ((global.timer) mod t == 0)
        {
            active = true;
            look = -look;
            hasShot = false;
        }
        
        if (active)
        {
            fCur = max(min(fCur + fSpeed*sign(look), fMax),0);
        
            if (fCur &gt;= fMax - fSpeed &amp;&amp; !hasShot &amp;&amp; look == UP &amp;&amp; x &lt; WIDTH &amp;&amp; global.player.state != DEAD)
            {
                instance_create(x+TILE*.5,y+TILE*.5,objEnemyProjectile);
                hasShot = true;
            }
    
            if (fCur &lt;= 0 || fCur &gt;= fMax)
                active = false;
        }
        
        if (fCur &gt;= fMax)
            state = IDLE;
        else
            state = DEAD;
    } else //DEAD
    {
        state = DEAD;
        if (!knockedUp)
        {   
            fCur = 0;
            global.enemiesKilled += 1;
            playSound(sfxEnemyDie);
            yVel = -3;
            knockedUp = true;
        }
        fCur = (fCur + .2) mod 4;
        yVel += yGrav;
        y += yVel;
    }
        
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed = 0;
frame = floor(fCur);

switch(dir)
{
    case UP:
        row = 5;
    break;
    case DOWN:
        row = 6;
    break;
    case LEFT:
        row = 7;
    break;
    case RIGHT:
        row = 8;
    break;
    default:
        row = 5;
    break;
}

if (alive)
    draw_sprite_part(spriteGfx,-1,frame*TILE,row*TILE,TILE,TILE,floor(x),y);
else
    draw_sprite_part(spriteGfx,-1,5*TILE+frame*TILE,5*TILE,TILE,TILE,floor(x),y);



</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>8,8</point>
  </PhysicsShapePoints>
</object>
