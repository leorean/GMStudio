<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>objAll</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>depth = HUDDEPTH+2;
mask_index = sprParticleMask;

with(objPlayer)
    instance_destroy();
    
global.xSpeed = 0; //lol...
global.player = noone;

if (global.input != INPUT_TOUCH)
    global.mouseVisible = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_color(c_white);
draw_set_alpha(1);
draw_rectangle(0,0,WIDTH,HEIGHT,0);

draw_sprite_part(spriteHelp,-1,0,0,WIDTH,HEIGHT,0,0);
draw_sprite_part(spriteHelp,-1,WIDTH,0,WIDTH,HEIGHT,0,0);

if (mouse_check_button_released(mb_left) || keyboard_check_pressed(vk_anykey))
{
    instance_activate_object(objControl);
    room_goto(INIT);
}

draw_set_halign(fa_left);
draw_set_valign(fa_top);

drawText(.5*TILE, .5*TILE,"HOW TO PLAY:",c_black,c_none,fntMenu);

if (global.input == INPUT_KEYBOARD)
{
    drawText(.5*TILE, 2*TILE,"Press &lt;UP&gt; to jump",c_black,c_none,fntText);
    drawText(.5*TILE, 3*TILE,"Press &lt;RIGHT&gt; to dash",c_black,c_none,fntText);
    drawText(.5*TILE, 4*TILE,"Hold &lt;DOWN&gt; to stop",c_black,c_none,fntText);
    drawText(.5*TILE, 5*TILE,"Press &lt;ESC&gt; or &lt;P&gt; to pause",c_black,c_none,fntText);
    drawText(.5*TILE, 6*TILE,"Press &lt;M&gt; to mute",c_black,c_none,fntText);
} else
{
    drawText(.5*TILE, 2*TILE,"Tap the Left Screen to jump",c_black,c_none,fntText);
    drawText(.5*TILE, 3*TILE,"Tap the Right Screen to dash",c_black,c_none,fntText);
    drawText(.5*TILE, 4*TILE,"Tap the Middle Screen to stop",c_black,c_none,fntText);
    drawText(.5*TILE, 5*TILE,"Tap the Pause-Symbol to pause",c_black,c_none,fntText);
    drawText(.5*TILE, 6*TILE,"Tap the Sound Symbol to mute",c_black,c_none,fntText);

}    
drawText(.5*TILE, 7.5*TILE,"WHAT TO DO:",c_black,c_none,fntMenu);
drawText(.5*TILE, 9*TILE,"Collect as many Coins as you can!",c_black,c_none,fntText);
drawText(.5*TILE, 10*TILE,"Level Up! Upgrade your Stuff!",c_black,c_none,fntText);
drawText(.5*TILE, 11*TILE,"Enemies and Coins give you EXP!",c_black,c_none,fntText);
drawText(.5*TILE, 12*TILE,"Dash your way to new Worlds!",c_black,c_none,fntText);

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
