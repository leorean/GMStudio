<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>objLivingEnemy</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>depth = PLAYERDEPTH+2;
mask_index = sprEnemyMask;

xVel = 0;
yVel = 0;
dir = LEFT;
spd = 1;
yGrav = .15;

state = IDLE;
alive = true;

canJump = false;

fCur = 0;
fMax = 4;
fSpeed = 0;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!global.pause)
{
    cycle ();

    if (state != DEAD)
    {
        if (x &lt; WIDTH)
            xVel = sign(dir)*spd;
        else
            yVel = 0;
            
        if (canJump)
            xVel = 0;
            
        if (place_free(x/*+ceil(global.xSpeed)+xVel*/,y))
            x += xVel;
        else
        {
            if (collision_line(bbox_left-3,bbox_top,bbox_left-3,bbox_bottom,objSolid,false,true))
            {
                dir = RIGHT;
                x += 1;
            }
            if (collision_line(bbox_right+3,bbox_top,bbox_right+3,bbox_bottom,objSolid,false,true))
            {
                dir = LEFT;
                x -= 1;
            }
        }

        if (yVel &gt;= 0)
            if (place_meeting(x-xVel,y+1,objAny))
            {
                if (!canJump)
                {   
                    //yVel = 0;
                    xVel = 0;
                    fCur = 0;
                    canJump = true;
                }
                
                if (fCur &gt;= fMax - fSpeed)
                {
                    yVel = -3;
                    canJump = false;
                }
                
            }
    
    } else
    {
        if (alive)
        {
            global.enemiesKilled += 1;
            repeat(5)
                spawnParticle(x+TILE*.5,y+TILE*.5,COLOR_POO);
            yVel = -3;
        }
        alive = false;
        xVel = 0;
        y += yVel;
    }
    
    //yVel += yGrav;
    
    if (!alive) state = DEAD;
    
    if (x &lt; WIDTH)
        yCollision();
    
    yVel += yGrav;
        
    if (state == DEAD)
        fCur = (fCur + fSpeed) mod fMax;
    else
        fCur = min(fCur + fSpeed, fMax - fSpeed);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed = 0;
frame = floor(fCur);

switch(state)
{
    case IDLE:
        row = 0;
        fSpeed = .2;
    break;
    case DEAD:
        row = 1;
        fSpeed = .3;
    break;
}

if (dir == RIGHT)
    draw_sprite_part(spriteEnemies,-1,frame*TILE,2*TILE+row*TILE,TILE,TILE,floor(x),ceil(y));
else
    draw_sprite_part_ext(spriteEnemies,-1,frame*TILE,2*TILE+row*TILE,TILE,TILE,floor(x)+TILE,ceil(y),-1,1,c_white,1);

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
