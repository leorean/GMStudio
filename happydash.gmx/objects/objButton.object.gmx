<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//if (!variable_local_exists("index"))
//    index = -1;
//if (!variable_local_exists("parent"))
//    parent = noone;

colorActive = c_white;
colorInactive = c_gray;//make_color_rgb(209,152,105)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_font(global.fntDefault);
draw_set_color(c_white);
draw_set_halign(fa_center);
draw_set_valign(fa_top);
draw_set_alpha(1);

if (parent.index == index) // ACTIVE
{
    draw_set_color(colorActive);
    drawText = ("@ "+string(text)+" @");
}
else //INACTIVE
{
    draw_set_color(colorInactive);
    drawText = text;
}

draw_text(x,y,drawText);

//sprite_collision_mask(id,false,1,0,string_width(text),0,string_height(text),1,0);

/*
ind The index of the sprite to set the bounding box of.
sepmasks Whether to create collision masks for each sub-image of the sprite (true), or one mask for all (false).
bboxmode What kind of bounding box to use. 0=automatic, 1=full image, 2=user defined.
bbleft The maximum left position of the bounding box.
bbtop The maximum top position of the bounding box.
bbright The maximum right position of the bounding box.
bbbottom The maximum bottom position of the bounding box.
kind The kind of mask (0=precise, 1=bounding box, 2=disk, 3=diamond).
tolerance Indicates the tolerance in the transparency value (0=no tolerance, 255=full tolerance).
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
