<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprPlayer</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>xVel = 0;
yVel = 0;
state = IDLE;

dragged = false;
angle = 0;

dir = RIGHT;

yGrav = .12;

pow = 0;
maxPow = 7;

cx = x+TILE/2;
cy = y+TILE/2;
dx = cx;
dy = cy;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
//+++++physics++++++
onGround = (yVel &gt;= 0 &amp;&amp; (collision_line(x,y+TILE+1,x+TILE,y+TILE+1,objBlock,false,true) != noone));

cx = x+TILE/2;
cy = y+TILE/2;
//angle = point_direction(cx,cy,mouse_x,mouse_y);
//pow = point_distance(cx,cy,mouse_x,mouse_y);
//show_debug_message(pow);

if (onGround)
{
    yVel = -1;
    dir = -dir;

    if (abs(xVel) &lt; 1.5)
    {
        xVel = sign(dir)*.5;
        if (state == JUMP) state = IDLE;        
    }
    else
        xVel *= .8;
}
yVel += yGrav;

if (!dragged)
{
    dx = cx;
    dy = cy;
    pow = 0;
    if (mouse_check_button(mb_left))
    {
        dx = mouse_x;
        dy = mouse_y;    
        dragged = true;
    }
        
} else
{
    angle = point_direction(dx,dy,mouse_x,mouse_y);
    pow = clamp(point_distance(dx,dy,mouse_x,mouse_y)/10,2,7);
    show_debug_message(pow);
    //pow = min(pow+.1,maxPow);
    if (mouse_check_button_released(mb_left))
    {
        xVel = lengthdir_x(pow,angle);
        yVel = lengthdir_y(pow,angle);        
        dragged = false;
        state = JUMP;
    }
}

if (y+yVel&gt;0 &amp;&amp; !place_meeting(x,y+yVel,objBlock))
    y += yVel;
else
{
//    xVel *= .5;
    yVel = -yVel*.5;
}

if (in(x+xVel,0,room_width-TILE) &amp;&amp; !place_meeting(x+xVel,y,objBlock))
    x += xVel;
else
{
    xVel = -xVel*.5;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();

if (dragged)
{
    draw_line(dx,dy,mouse_x,mouse_y);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
