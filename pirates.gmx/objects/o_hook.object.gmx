<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_angle = 0;
final_angle = 0;
sprite = sprite_add("hook.png",0,true,false,8,8);
hooked = false;
alive = true;

//upgrade parameters!
gravity = 0;
friction = .8;
spd = 20;
maxdist = 200;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//draw_angle = ( ((arctan2(vspeed,hspeed)+2*pi) mod (2*pi)) / pi * -180 )-90;
draw_angle = point_direction(x,y,o_player.x,o_player.y)+90;

if (!hooked)
    final_angle = draw_angle;
    
if (speed &lt; 2 &amp;&amp; !o_player.hooked)
{
    alive = false;
}

/*
if ((x &lt; 0 - 8 || x &gt; room_width + 8 || y &lt; view_yview[0] - 8 || y &gt; view_yview[0] + view_hview[0] + 8) &amp;&amp; !o_player.hooked)
{
    o_player.hooked = false;
    hooked = false;
    alive = false;
}*/

/*if (point_distance(o_player.x,o_player.y, x, y) &gt; maxdist)
{
    o_player.hooked = false;
    alive = false;
}*/

if (!alive)
    instance_destroy();

if (collision_rectangle(x,y,x,y,o_block,false,true))
{
    nearest = instance_nearest(x,y,o_block);
    hooked = true;
    o_player.hooked = true;
    o_player.nearest = nearest;
    speed = 0;
    x = nearest.x+8;
    y = nearest.y+8;
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!hooked)
    draw_sprite_ext(sprite,0,x,y,1,1,draw_angle,c_white,1);
else
    draw_sprite_ext(sprite,0,x,y,1,1,final_angle,c_white,1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
