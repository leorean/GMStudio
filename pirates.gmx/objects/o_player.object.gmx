<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>gold = 0;
hooked = false;
hook_x = 0;
hook_y = 0;

maxspd = 3;
spd = maxspd;
minspd = 1;

nearest = -999; //nearest hookable object

state = IDLE;
visible = false;
altitude = 0;

sprite = sprite_add("player.png",4,true,false,16,16);
sprite_collision_mask(sprite, false, 0, 8, 8, 24, 24, 0, 0);
image_speed = 0;

width = 32;
height = 32;

curframe = 0; minframe = 0; maxframe = 0;

angle = 0;
draw_angle = 0;

gravity = .2;
gravity_direction = 270;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (state == IDLE)
{
    x = o_cannon.x;
    y = o_cannon.y;
    hspeed = 0;
    vspeed = 0;
}

if (keyboard_check(ord('R')))
    game_restart();

if (keyboard_check(ord('E')))
    vspeed -= 5;


draw_angle = ( ((arctan2(vspeed,hspeed)+2*pi) mod (2*pi)) / pi * -180 )-90;

altitude = y - o_cannon.y + 1;

// animation frame rotation
curframe += image_speed;
if (floor(curframe) &gt; maxframe)
    curframe = minframe;

//speed bounds
if hspeed&gt;10
    hspeed=10;
if hspeed&lt;-10
    hspeed=-10;
if vspeed&gt;10
    vspeed=10;

    
//check bounds (what happens if player falls out of map?)
if(x &lt; 0)
{
    x = 0;
    hspeed = -hspeed;
    vspeed *= .8;
}
if(x &gt; room_width)
{
    x = room_width;
    hspeed = -hspeed;
    vspeed *= .8;
}
/*
if(y &gt; view_yview[0]+view_hview[0]+32)
{
    vspeed = min(-vspeed/2,-.5);
    //room_restart();
}*/

//mouse click event if shot
if (mouse_check_button_pressed(mb_left) &amp;&amp; state != IDLE)
{
    if (instance_exists(o_hook))
    with (o_hook)
        instance_destroy();
    hooked = false;
    hook_x = mouse_x;
    hook_y = mouse_y;
    
    with (instance_create(x,y,o_hook))
    {
        angle = point_direction(o_player.x+o_player.width/2, o_player.y+o_player.height/2, o_player.hook_x, o_player.hook_y);
        move_towards_point(o_player.hook_x,o_player.hook_y,o_hook.spd);
        hspeed = hspeed + o_player.hspeed/3;
        vspeed = vspeed + o_player.vspeed/3;

    }
    
}


if (!hooked)
{
    spd = maxspd;
}

if (hooked)
{

    if (!instance_exists(o_hook))
        hooked = false;
        
    dist = point_distance(x,y,hook_x,hook_y);
    
    if (abs(hspeed) &gt; 3)
        hspeed *= .8;
    
    if (!instance_exists(o_hook.nearest))
        hooked = false;
    
    hook_x = nearest.x + 8;
    hook_y = nearest.y + 8;
    angle = point_direction(x, y, hook_x, hook_y);
    
    if (dist &gt; 16)
        motion_add(angle,spd);
    else if (vspeed &lt;0)
    {
        hooked = false;
        with(o_hook)
                instance_destroy();
    }
    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>switch (state)
{
    case IDLE:
        minframe = 0;
        maxframe = 0;
        image_speed = 0;
        
}

//draw rope

if (instance_exists(o_hook) &amp;&amp; !hooked)
{
    draw_set_color(c_black);
    draw_line_width(x,y,o_hook.x,o_hook.y,4);
    draw_set_color(make_color_rgb(183,162,87));
    draw_line_width(x,y,o_hook.x,o_hook.y,2);
}
    
if (instance_exists(o_hook) &amp;&amp; hooked)
{
    draw_set_color(c_black);
    draw_line_width(x,y,hook_x,hook_y,4);
    draw_set_color(make_color_rgb(183,162,87));
    draw_line_width(x,y,hook_x,hook_y,2);
}
//draw player
draw_sprite_ext(sprite,0,x,y,1,1,draw_angle,c_white,1);

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
