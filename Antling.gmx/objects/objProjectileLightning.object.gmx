<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10</depth>
  <persistent>0</persistent>
  <parentName>objProjectile</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>dmg = .02;

spd = 8;
xVel = 0;
yVel = 0;
angle = 0;

mask_index = mskPixel;

color = c_white;

xO = x;
yO = y;
checkX = x;
checkY = y;

t = 15;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>t = max(t-1,0);
if (instance_exists(objPlayer) &amp;&amp; t)
{
    x = objPlayer.cx+(objPlayer.weaponDist*(objPlayer.alternate != 0)*sign(objPlayer.dir)) + objPlayer.xVel;
    y = objPlayer.cy + objPlayer.yVel;
    angle = objPlayer.aim;
    if (!objPlayer.kAction || objPlayer.weapon != 1)
        instance_destroy();
} else
    instance_destroy();

if (global.timer % 2 == 0)
    color = make_color_hsv(140,155,255);
else
    color = c_white;
    
checkX = x;
checkY = y;
var sample = 5;
for (var i = 0; i &lt; WIDTH/sample; i++)
{
    checkX = min(max(checkX + lengthdir_x(sample,angle),view_xview[0]),view_xview[0]+view_wview[0]);
    checkY = min(max(checkY + lengthdir_y(sample,angle),view_yview[0]),view_yview[0]+view_hview[0]);
    if (place_meeting(checkX,checkY,objAny) &amp;&amp; !place_meeting(checkX,checkY,objPlayer))
    {
        // do stuff with enemies etc
        break;
    }
} 
//block = collision_line(xO,yO,x,y,objSolid,true,true);

/*
if (!instance_exists(block))
{
    x = min(max(xO + lengthdir_x(WIDTH,angle), view_xview[0]),view_xview[0]+view_wview[0]);
    y = min(max(yO + lengthdir_y(WIDTH,angle), view_yview[0]),view_yview[0]+view_hview[0]);
} else
{
    
}*/

/*
target = instance_place(x,y,objSolid);
if (instance_exists(target))
{
    //var p = instance_create(x,y,objParticle1);
    //p.angle = ((angle + 180) % 360)-45+random(90);
    instance_destroy();
}
*/

/*
if (!place_meeting(x+xVel,y,objSolid))
    x += xVel;
else
    xVel = 0;
if (!place_meeting(x,y+yVel,objSolid))
    y += yVel;
else
    yVel = 0;
*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_color(c_white);
draw_set_alpha(1);

drawLightning(x,y,checkX,checkY,color);
//draw_sprite_ext(mskPixel,-1,x,y,2,2,0,make_color_hsv(35,200,255),1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
