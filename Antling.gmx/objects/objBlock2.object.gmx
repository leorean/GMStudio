<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>mskBlock2</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>1</depth>
  <persistent>0</persistent>
  <parentName>objBlock</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>mask_index = mskBlock;
type = 2;

xVel = 0;
yVel = 0;
yGrav = .15;

canFall = false;

maxFallTimer = 15;
fallTimer = maxFallTimer;

state = IDLE;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (instance_exists(objPlayer))
{
    if (!canFall)
    {
        if (!place_meeting(x,y+TILE,objPlayer) &amp;&amp; !place_meeting(x,y+1,objAny))
            canFall = true;
    }
    if (in(objPlayer.x,x-TILE/2,x+TILE+TILE/2) &amp;&amp; in(objPlayer.y,y,y+TILE))
    &amp;&amp; ((objPlayer.state == DIG || objPlayer.state == PUSH) &amp;&amp; !objPlayer.die)
        canFall = false;
    
    if (state == IDLE)
    {
        //canBePushed = place_free(x+sign(dir)*TILE,y);
        dir = sign(x+TILE/2 - objPlayer.cx);
        px = x;
        
        if (canFall)
            yVel = min(yVel + yGrav, 3);
    }    
}

if (canFall &amp;&amp; place_meeting(x,y+2*yVel,objPlayer))
{
    with(objPlayer) die = true;  
    canFall = false;     
}

if (!place_meeting(x,y+yVel,objAny))
    y += yVel;
else
{
    yVel = 0;
    x = ((x+TILE/2) div TILE) * TILE;
    y = ((y+TILE/2) div TILE) * TILE;    
    canFall = false;

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*if (fallTimer != 0 &amp;&amp; fallTimer != maxFallTimer)
    d = (fallTimer % 3) - 1;//-1+random(2);
else
    d = 0;*/
draw_sprite_part(sprGfx,-1,type*TILE,0,TILE,TILE,x,y);

//draw_text(x,y,fallTimer);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>8,8</point>
  </PhysicsShapePoints>
</object>
