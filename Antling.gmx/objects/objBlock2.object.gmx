<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>mskBlock2</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>1</depth>
  <persistent>0</persistent>
  <parentName>objBlock</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>mask_index = mskBlock;
type = 2;

xVel = 0;
yVel = 0;
yGrav = .15;

canKill = false;

maxFallTimer = 15;
fallTimer = maxFallTimer;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>yVel += yGrav;

fallTimer = max(fallTimer - 1,0);

if (canKill &amp;&amp; !fallTimer)
{
    repeat(abs(round(yVel))*10)
    {
        if (!place_meeting(x,y+sign(yVel)*.1,objAny))
            y += sign(yVel)*.1;
        else
        {
            yVel = 0;
            fallTimer = maxFallTimer;
        }
    }
}
else
{
    if (place_meeting(x,y+yVel,objAny) || !canKill)
        fallTimer = maxFallTimer;
    yVel = 0;
}

if (y &gt; room_height) instance_destroy();

if (!canKill)
{
    inReach = instance_exists(objPlayer) &amp;&amp; objPlayer.bbox_left &gt;= x &amp;&amp; objPlayer.bbox_right &lt;= (x+TILE)
        &amp;&amp; in(objPlayer.y,y,y+TILE);
    if (!place_meeting(x,y+TILE,objAny)
       &amp;&amp; !inReach)
        canKill = true;
}
else
{
    if (yVel &gt; 0)
    {
        if (collision_line(bbox_left+2,bbox_bottom+yVel+1,bbox_right-2,bbox_bottom+yVel+1,objPlayer,true,true))
            objPlayer.die = true;
        with(instance_place(x,y+yVel,objBlock4))
        {
            instance_create(x,y,objEffectDust);
            instance_destroy();
        }
        with(instance_place(x,y+yVel,objBlock5))
            explode = true;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (canKill &amp;&amp; fallTimer != 0 &amp;&amp; fallTimer != maxFallTimer)
    d = (fallTimer % 3) - 1;//-1+random(2);
else
    d = 0;
draw_sprite_part(sprGfx,-1,type*TILE,0,TILE,TILE,x+d,y);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>8,8</point>
  </PhysicsShapePoints>
</object>
